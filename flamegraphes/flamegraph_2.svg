<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="629.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="8441"><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 0.01%)</title><rect x="0.1185%" y="245" width="0.0118%" height="15" fill="rgb(227,0,7)" fg:x="10" fg:w="1"/><text x="0.3685%" y="255.50"></text></g><g><title>[libc-2.31.so] (82 samples, 0.97%)</title><rect x="0.1303%" y="245" width="0.9714%" height="15" fill="rgb(217,0,24)" fg:x="11" fg:w="82"/><text x="0.3803%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.05%)</title><rect x="5.2600%" y="213" width="0.0474%" height="15" fill="rgb(221,193,54)" fg:x="444" fg:w="4"/><text x="5.5100%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.05%)</title><rect x="5.2600%" y="197" width="0.0474%" height="15" fill="rgb(248,212,6)" fg:x="444" fg:w="4"/><text x="5.5100%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (1 samples, 0.01%)</title><rect x="7.7242%" y="197" width="0.0118%" height="15" fill="rgb(208,68,35)" fg:x="652" fg:w="1"/><text x="7.9742%" y="207.50"></text></g><g><title>shakmaty::board::Board::piece_at (1 samples, 0.01%)</title><rect x="7.7242%" y="181" width="0.0118%" height="15" fill="rgb(232,128,0)" fg:x="652" fg:w="1"/><text x="7.9742%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (225 samples, 2.67%)</title><rect x="19.6896%" y="181" width="2.6656%" height="15" fill="rgb(207,160,47)" fg:x="1662" fg:w="225"/><text x="19.9396%" y="191.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (225 samples, 2.67%)</title><rect x="19.6896%" y="165" width="2.6656%" height="15" fill="rgb(228,23,34)" fg:x="1662" fg:w="225"/><text x="19.9396%" y="175.50">co..</text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitXor&lt;T&gt;&gt;::bitxor (69 samples, 0.82%)</title><rect x="31.6787%" y="165" width="0.8174%" height="15" fill="rgb(218,30,26)" fg:x="2674" fg:w="69"/><text x="31.9287%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.4961%" y="165" width="0.0118%" height="15" fill="rgb(220,122,19)" fg:x="2743" fg:w="1"/><text x="32.7461%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.4961%" y="149" width="0.0118%" height="15" fill="rgb(250,228,42)" fg:x="2743" fg:w="1"/><text x="32.7461%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.4961%" y="133" width="0.0118%" height="15" fill="rgb(240,193,28)" fg:x="2743" fg:w="1"/><text x="32.7461%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.4961%" y="117" width="0.0118%" height="15" fill="rgb(216,20,37)" fg:x="2743" fg:w="1"/><text x="32.7461%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.4961%" y="101" width="0.0118%" height="15" fill="rgb(206,188,39)" fg:x="2743" fg:w="1"/><text x="32.7461%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.4961%" y="85" width="0.0118%" height="15" fill="rgb(217,207,13)" fg:x="2743" fg:w="1"/><text x="32.7461%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="32.4961%" y="69" width="0.0118%" height="15" fill="rgb(231,73,38)" fg:x="2743" fg:w="1"/><text x="32.7461%" y="79.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.07%)</title><rect x="32.5080%" y="149" width="0.0711%" height="15" fill="rgb(225,20,46)" fg:x="2744" fg:w="6"/><text x="32.7580%" y="159.50"></text></g><g><title>retroboard::retroboard::RetroBoard::king_of (303 samples, 3.59%)</title><rect x="32.5080%" y="165" width="3.5896%" height="15" fill="rgb(210,31,41)" fg:x="2744" fg:w="303"/><text x="32.7580%" y="175.50">retr..</text></g><g><title>shakmaty::board::Board::king_of (297 samples, 3.52%)</title><rect x="32.5791%" y="149" width="3.5185%" height="15" fill="rgb(221,200,47)" fg:x="2750" fg:w="297"/><text x="32.8291%" y="159.50">sha..</text></g><g><title>shakmaty::bitboard::Bitboard::single_square (297 samples, 3.52%)</title><rect x="32.5791%" y="133" width="3.5185%" height="15" fill="rgb(226,26,5)" fg:x="2750" fg:w="297"/><text x="32.8291%" y="143.50">sha..</text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (297 samples, 3.52%)</title><rect x="32.5791%" y="117" width="3.5185%" height="15" fill="rgb(249,33,26)" fg:x="2750" fg:w="297"/><text x="32.8291%" y="127.50">sha..</text></g><g><title>shakmaty::attacks::bishop_attacks (2 samples, 0.02%)</title><rect x="45.1842%" y="149" width="0.0237%" height="15" fill="rgb(235,183,28)" fg:x="3814" fg:w="2"/><text x="45.4342%" y="159.50"></text></g><g><title>shakmaty::attacks::king_attacks (5 samples, 0.06%)</title><rect x="45.2079%" y="149" width="0.0592%" height="15" fill="rgb(221,5,38)" fg:x="3816" fg:w="5"/><text x="45.4579%" y="159.50"></text></g><g><title>shakmaty::attacks::knight_attacks (1 samples, 0.01%)</title><rect x="45.2671%" y="149" width="0.0118%" height="15" fill="rgb(247,18,42)" fg:x="3821" fg:w="1"/><text x="45.5171%" y="159.50"></text></g><g><title>shakmaty::attacks::pawn_attacks (3 samples, 0.04%)</title><rect x="45.2790%" y="149" width="0.0355%" height="15" fill="rgb(241,131,45)" fg:x="3822" fg:w="3"/><text x="45.5290%" y="159.50"></text></g><g><title>shakmaty::attacks::bishop_attacks (102 samples, 1.21%)</title><rect x="45.3145%" y="133" width="1.2084%" height="15" fill="rgb(249,31,29)" fg:x="3825" fg:w="102"/><text x="45.5645%" y="143.50"></text></g><g><title>shakmaty::attacks::queen_attacks (194 samples, 2.30%)</title><rect x="45.3145%" y="149" width="2.2983%" height="15" fill="rgb(225,111,53)" fg:x="3825" fg:w="194"/><text x="45.5645%" y="159.50">s..</text></g><g><title>shakmaty::attacks::rook_attacks (92 samples, 1.09%)</title><rect x="46.5229%" y="133" width="1.0899%" height="15" fill="rgb(238,160,17)" fg:x="3927" fg:w="92"/><text x="46.7729%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (7 samples, 0.08%)</title><rect x="47.5299%" y="117" width="0.0829%" height="15" fill="rgb(214,148,48)" fg:x="4012" fg:w="7"/><text x="47.7799%" y="127.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.08%)</title><rect x="47.5299%" y="101" width="0.0829%" height="15" fill="rgb(232,36,49)" fg:x="4012" fg:w="7"/><text x="47.7799%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (7 samples, 0.08%)</title><rect x="47.5299%" y="85" width="0.0829%" height="15" fill="rgb(209,103,24)" fg:x="4012" fg:w="7"/><text x="47.7799%" y="95.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (7 samples, 0.08%)</title><rect x="47.5299%" y="69" width="0.0829%" height="15" fill="rgb(229,88,8)" fg:x="4012" fg:w="7"/><text x="47.7799%" y="79.50"></text></g><g><title>shakmaty::attacks::attacks (980 samples, 11.61%)</title><rect x="36.0976%" y="165" width="11.6100%" height="15" fill="rgb(213,181,19)" fg:x="3047" fg:w="980"/><text x="36.3476%" y="175.50">shakmaty::attacks..</text></g><g><title>shakmaty::attacks::rook_attacks (8 samples, 0.09%)</title><rect x="47.6128%" y="149" width="0.0948%" height="15" fill="rgb(254,191,54)" fg:x="4019" fg:w="8"/><text x="47.8628%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="51.4749%" y="149" width="0.0711%" height="15" fill="rgb(241,83,37)" fg:x="4345" fg:w="6"/><text x="51.7249%" y="159.50"></text></g><g><title>shakmaty::board::Board::piece_at::{{closure}} (6 samples, 0.07%)</title><rect x="51.4749%" y="133" width="0.0711%" height="15" fill="rgb(233,36,39)" fg:x="4345" fg:w="6"/><text x="51.7249%" y="143.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (6 samples, 0.07%)</title><rect x="51.4749%" y="117" width="0.0711%" height="15" fill="rgb(226,3,54)" fg:x="4345" fg:w="6"/><text x="51.7249%" y="127.50"></text></g><g><title>shakmaty::bitboard::Bitboard::is_empty (6 samples, 0.07%)</title><rect x="51.4749%" y="101" width="0.0711%" height="15" fill="rgb(245,192,40)" fg:x="4345" fg:w="6"/><text x="51.7249%" y="111.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (5 samples, 0.06%)</title><rect x="58.2751%" y="117" width="0.0592%" height="15" fill="rgb(238,167,29)" fg:x="4919" fg:w="5"/><text x="58.5251%" y="127.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (3,182 samples, 37.70%)</title><rect x="22.3552%" y="181" width="37.6970%" height="15" fill="rgb(232,182,51)" fg:x="1887" fg:w="3182"/><text x="22.6052%" y="191.50">retroboard::retroboard::RetroBoard::does_unmove_give_check</text></g><g><title>shakmaty::board::Board::piece_at (1,042 samples, 12.34%)</title><rect x="47.7076%" y="165" width="12.3445%" height="15" fill="rgb(231,60,39)" fg:x="4027" fg:w="1042"/><text x="47.9576%" y="175.50">shakmaty::board::B..</text></g><g><title>shakmaty::board::Board::role_at (718 samples, 8.51%)</title><rect x="51.5460%" y="149" width="8.5061%" height="15" fill="rgb(208,69,12)" fg:x="4351" fg:w="718"/><text x="51.7960%" y="159.50">shakmaty::bo..</text></g><g><title>shakmaty::bitboard::Bitboard::contains (150 samples, 1.78%)</title><rect x="58.2751%" y="133" width="1.7770%" height="15" fill="rgb(235,93,37)" fg:x="4919" fg:w="150"/><text x="58.5251%" y="143.50">s..</text></g><g><title>shakmaty::bitboard::Bitboard::from_square (145 samples, 1.72%)</title><rect x="58.3343%" y="117" width="1.7178%" height="15" fill="rgb(213,116,39)" fg:x="4924" fg:w="145"/><text x="58.5843%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (26 samples, 0.31%)</title><rect x="60.0521%" y="165" width="0.3080%" height="15" fill="rgb(222,207,29)" fg:x="5069" fg:w="26"/><text x="60.3021%" y="175.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (2 samples, 0.02%)</title><rect x="60.3601%" y="149" width="0.0237%" height="15" fill="rgb(206,96,30)" fg:x="5095" fg:w="2"/><text x="60.6101%" y="159.50"></text></g><g><title>shakmaty::bitboard::Bitboard::single_square (485 samples, 5.75%)</title><rect x="60.3838%" y="149" width="5.7458%" height="15" fill="rgb(218,138,4)" fg:x="5097" fg:w="485"/><text x="60.6338%" y="159.50">shakmat..</text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (485 samples, 5.75%)</title><rect x="60.3838%" y="133" width="5.7458%" height="15" fill="rgb(250,191,14)" fg:x="5097" fg:w="485"/><text x="60.6338%" y="143.50">shakmat..</text></g><g><title>retroboard::retroboard::RetroBoard::king_of (526 samples, 6.23%)</title><rect x="60.0521%" y="181" width="6.2315%" height="15" fill="rgb(239,60,40)" fg:x="5069" fg:w="526"/><text x="60.3021%" y="191.50">retroboa..</text></g><g><title>shakmaty::board::Board::king_of (500 samples, 5.92%)</title><rect x="60.3601%" y="165" width="5.9235%" height="15" fill="rgb(206,27,48)" fg:x="5095" fg:w="500"/><text x="60.6101%" y="175.50">shakmaty..</text></g><g><title>shakmaty::board::Board::by_color (13 samples, 0.15%)</title><rect x="66.1296%" y="149" width="0.1540%" height="15" fill="rgb(225,35,8)" fg:x="5582" fg:w="13"/><text x="66.3796%" y="159.50"></text></g><g><title>shakmaty::attacks::aligned (1 samples, 0.01%)</title><rect x="66.2836%" y="181" width="0.0118%" height="15" fill="rgb(250,213,24)" fg:x="5595" fg:w="1"/><text x="66.5336%" y="191.50"></text></g><g><title>shakmaty::attacks::ray (1 samples, 0.01%)</title><rect x="66.2836%" y="165" width="0.0118%" height="15" fill="rgb(247,123,22)" fg:x="5595" fg:w="1"/><text x="66.5336%" y="175.50"></text></g><g><title>shakmaty::attacks::between (1 samples, 0.01%)</title><rect x="66.2955%" y="181" width="0.0118%" height="15" fill="rgb(231,138,38)" fg:x="5596" fg:w="1"/><text x="66.5455%" y="191.50"></text></g><g><title>shakmaty::attacks::ray (1 samples, 0.01%)</title><rect x="66.2955%" y="165" width="0.0118%" height="15" fill="rgb(231,145,46)" fg:x="5596" fg:w="1"/><text x="66.5455%" y="175.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (7 samples, 0.08%)</title><rect x="66.3073%" y="165" width="0.0829%" height="15" fill="rgb(251,118,11)" fg:x="5597" fg:w="7"/><text x="66.5573%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::is_safe (5,047 samples, 59.79%)</title><rect x="7.7361%" y="197" width="59.7915%" height="15" fill="rgb(217,147,25)" fg:x="653" fg:w="5047"/><text x="7.9861%" y="207.50">retroboard::retroboard::RetroBoard::is_safe</text></g><g><title>shakmaty::bitboard::Bitboard::contains (103 samples, 1.22%)</title><rect x="66.3073%" y="181" width="1.2202%" height="15" fill="rgb(247,81,37)" fg:x="5597" fg:w="103"/><text x="66.5573%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (96 samples, 1.14%)</title><rect x="66.3902%" y="165" width="1.1373%" height="15" fill="rgb(209,12,38)" fg:x="5604" fg:w="96"/><text x="66.6402%" y="175.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (5,629 samples, 66.69%)</title><rect x="1.1018%" y="245" width="66.6864%" height="15" fill="rgb(227,1,9)" fg:x="93" fg:w="5629"/><text x="1.3518%" y="255.50">arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain</text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one (5,355 samples, 63.44%)</title><rect x="4.3478%" y="229" width="63.4404%" height="15" fill="rgb(248,47,43)" fg:x="367" fg:w="5355"/><text x="4.5978%" y="239.50">arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one</text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}} (5,274 samples, 62.48%)</title><rect x="5.3074%" y="213" width="62.4807%" height="15" fill="rgb(221,10,30)" fg:x="448" fg:w="5274"/><text x="5.5574%" y="223.50">retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}}</text></g><g><title>shakmaty::bitboard::Bitboard::first (22 samples, 0.26%)</title><rect x="67.5275%" y="197" width="0.2606%" height="15" fill="rgb(210,229,1)" fg:x="5700" fg:w="22"/><text x="67.7775%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::king_of (3 samples, 0.04%)</title><rect x="67.7882%" y="229" width="0.0355%" height="15" fill="rgb(222,148,37)" fg:x="5722" fg:w="3"/><text x="68.0382%" y="239.50"></text></g><g><title>shakmaty::board::Board::king_of (3 samples, 0.04%)</title><rect x="67.7882%" y="213" width="0.0355%" height="15" fill="rgb(234,67,33)" fg:x="5722" fg:w="3"/><text x="68.0382%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::single_square (3 samples, 0.04%)</title><rect x="67.7882%" y="197" width="0.0355%" height="15" fill="rgb(247,98,35)" fg:x="5722" fg:w="3"/><text x="68.0382%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (3 samples, 0.04%)</title><rect x="67.7882%" y="181" width="0.0355%" height="15" fill="rgb(247,138,52)" fg:x="5722" fg:w="3"/><text x="68.0382%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::occupied (2 samples, 0.02%)</title><rect x="67.8237%" y="229" width="0.0237%" height="15" fill="rgb(213,79,30)" fg:x="5725" fg:w="2"/><text x="68.0737%" y="239.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (2 samples, 0.02%)</title><rect x="67.8474%" y="213" width="0.0237%" height="15" fill="rgb(246,177,23)" fg:x="5727" fg:w="2"/><text x="68.0974%" y="223.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitOr&lt;T&gt;&gt;::bitor (1 samples, 0.01%)</title><rect x="67.8711%" y="213" width="0.0118%" height="15" fill="rgb(230,62,27)" fg:x="5729" fg:w="1"/><text x="68.1211%" y="223.50"></text></g><g><title>shakmaty::attacks::bishop_attacks (1 samples, 0.01%)</title><rect x="67.8830%" y="213" width="0.0118%" height="15" fill="rgb(216,154,8)" fg:x="5730" fg:w="1"/><text x="68.1330%" y="223.50"></text></g><g><title>retroboard::retroboard::RetroBoard::checkers (11 samples, 0.13%)</title><rect x="67.7882%" y="245" width="0.1303%" height="15" fill="rgb(244,35,45)" fg:x="5722" fg:w="11"/><text x="68.0382%" y="255.50"></text></g><g><title>shakmaty::board::Board::attacks_to (6 samples, 0.07%)</title><rect x="67.8474%" y="229" width="0.0711%" height="15" fill="rgb(251,115,12)" fg:x="5727" fg:w="6"/><text x="68.0974%" y="239.50"></text></g><g><title>shakmaty::attacks::rook_attacks (2 samples, 0.02%)</title><rect x="67.8948%" y="213" width="0.0237%" height="15" fill="rgb(240,54,50)" fg:x="5731" fg:w="2"/><text x="68.1448%" y="223.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (2 samples, 0.02%)</title><rect x="67.9777%" y="229" width="0.0237%" height="15" fill="rgb(233,84,52)" fg:x="5738" fg:w="2"/><text x="68.2277%" y="239.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_en_passant (8 samples, 0.09%)</title><rect x="67.9185%" y="245" width="0.0948%" height="15" fill="rgb(207,117,47)" fg:x="5733" fg:w="8"/><text x="68.1685%" y="255.50"></text></g><g><title>shakmaty::bitboard::Bitboard::relative_shift (1 samples, 0.01%)</title><rect x="68.0014%" y="229" width="0.0118%" height="15" fill="rgb(249,43,39)" fg:x="5740" fg:w="1"/><text x="68.2514%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (4 samples, 0.05%)</title><rect x="68.1317%" y="181" width="0.0474%" height="15" fill="rgb(209,38,44)" fg:x="5751" fg:w="4"/><text x="68.3817%" y="191.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="68.1317%" y="213" width="0.1303%" height="15" fill="rgb(236,212,23)" fg:x="5751" fg:w="11"/><text x="68.3817%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (11 samples, 0.13%)</title><rect x="68.1317%" y="197" width="0.1303%" height="15" fill="rgb(242,79,21)" fg:x="5751" fg:w="11"/><text x="68.3817%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::first (7 samples, 0.08%)</title><rect x="68.1791%" y="181" width="0.0829%" height="15" fill="rgb(211,96,35)" fg:x="5755" fg:w="7"/><text x="68.4291%" y="191.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (2 samples, 0.02%)</title><rect x="68.2621%" y="213" width="0.0237%" height="15" fill="rgb(253,215,40)" fg:x="5762" fg:w="2"/><text x="68.5121%" y="223.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (2 samples, 0.02%)</title><rect x="68.2621%" y="197" width="0.0237%" height="15" fill="rgb(211,81,21)" fg:x="5762" fg:w="2"/><text x="68.5121%" y="207.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (2 samples, 0.02%)</title><rect x="68.2621%" y="181" width="0.0237%" height="15" fill="rgb(208,190,38)" fg:x="5762" fg:w="2"/><text x="68.5121%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (5 samples, 0.06%)</title><rect x="68.3094%" y="165" width="0.0592%" height="15" fill="rgb(235,213,38)" fg:x="5766" fg:w="5"/><text x="68.5594%" y="175.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="68.3094%" y="197" width="0.0829%" height="15" fill="rgb(237,122,38)" fg:x="5766" fg:w="7"/><text x="68.5594%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (7 samples, 0.08%)</title><rect x="68.3094%" y="181" width="0.0829%" height="15" fill="rgb(244,218,35)" fg:x="5766" fg:w="7"/><text x="68.5594%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::first (2 samples, 0.02%)</title><rect x="68.3687%" y="165" width="0.0237%" height="15" fill="rgb(240,68,47)" fg:x="5771" fg:w="2"/><text x="68.6187%" y="175.50"></text></g><g><title>&lt;arrayvec::arrayvec::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.37%)</title><rect x="68.5701%" y="165" width="0.3673%" height="15" fill="rgb(210,16,53)" fg:x="5788" fg:w="31"/><text x="68.8201%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.58%)</title><rect x="68.5701%" y="181" width="0.5805%" height="15" fill="rgb(235,124,12)" fg:x="5788" fg:w="49"/><text x="68.8201%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.21%)</title><rect x="68.9373%" y="165" width="0.2132%" height="15" fill="rgb(224,169,11)" fg:x="5819" fg:w="18"/><text x="69.1873%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.19%)</title><rect x="68.9610%" y="149" width="0.1896%" height="15" fill="rgb(250,166,2)" fg:x="5821" fg:w="16"/><text x="69.2110%" y="159.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}} (16 samples, 0.19%)</title><rect x="68.9610%" y="133" width="0.1896%" height="15" fill="rgb(242,216,29)" fg:x="5821" fg:w="16"/><text x="69.2110%" y="143.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="69.1506%" y="181" width="0.0118%" height="15" fill="rgb(230,116,27)" fg:x="5837" fg:w="1"/><text x="69.4006%" y="191.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (51 samples, 0.60%)</title><rect x="69.1624%" y="181" width="0.6042%" height="15" fill="rgb(228,99,48)" fg:x="5838" fg:w="51"/><text x="69.4124%" y="191.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (8 samples, 0.09%)</title><rect x="69.6718%" y="165" width="0.0948%" height="15" fill="rgb(253,11,6)" fg:x="5881" fg:w="8"/><text x="69.9218%" y="175.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (8 samples, 0.09%)</title><rect x="69.6718%" y="149" width="0.0948%" height="15" fill="rgb(247,143,39)" fg:x="5881" fg:w="8"/><text x="69.9218%" y="159.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (8 samples, 0.09%)</title><rect x="69.6718%" y="133" width="0.0948%" height="15" fill="rgb(236,97,10)" fg:x="5881" fg:w="8"/><text x="69.9218%" y="143.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (8 samples, 0.09%)</title><rect x="69.6718%" y="117" width="0.0948%" height="15" fill="rgb(233,208,19)" fg:x="5881" fg:w="8"/><text x="69.9218%" y="127.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (8 samples, 0.09%)</title><rect x="69.6718%" y="101" width="0.0948%" height="15" fill="rgb(216,164,2)" fg:x="5881" fg:w="8"/><text x="69.9218%" y="111.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (2 samples, 0.02%)</title><rect x="69.7666%" y="181" width="0.0237%" height="15" fill="rgb(220,129,5)" fg:x="5889" fg:w="2"/><text x="70.0166%" y="191.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (2 samples, 0.02%)</title><rect x="69.7666%" y="165" width="0.0237%" height="15" fill="rgb(242,17,10)" fg:x="5889" fg:w="2"/><text x="70.0166%" y="175.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (2 samples, 0.02%)</title><rect x="69.7666%" y="149" width="0.0237%" height="15" fill="rgb(242,107,0)" fg:x="5889" fg:w="2"/><text x="70.0166%" y="159.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (129 samples, 1.53%)</title><rect x="68.3924%" y="197" width="1.5283%" height="15" fill="rgb(251,28,31)" fg:x="5773" fg:w="129"/><text x="68.6424%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (11 samples, 0.13%)</title><rect x="69.7903%" y="181" width="0.1303%" height="15" fill="rgb(233,223,10)" fg:x="5891" fg:w="11"/><text x="70.0403%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (11 samples, 0.13%)</title><rect x="69.7903%" y="165" width="0.1303%" height="15" fill="rgb(215,21,27)" fg:x="5891" fg:w="11"/><text x="70.0403%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawn_uncaptures (143 samples, 1.69%)</title><rect x="68.2857%" y="213" width="1.6941%" height="15" fill="rgb(232,23,21)" fg:x="5764" fg:w="143"/><text x="68.5357%" y="223.50"></text></g><g><title>shakmaty::attacks::pawn_attacks (5 samples, 0.06%)</title><rect x="69.9206%" y="197" width="0.0592%" height="15" fill="rgb(244,5,23)" fg:x="5902" fg:w="5"/><text x="70.1706%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawns (164 samples, 1.94%)</title><rect x="68.1199%" y="229" width="1.9429%" height="15" fill="rgb(226,81,46)" fg:x="5750" fg:w="164"/><text x="68.3699%" y="239.50">r..</text></g><g><title>shakmaty::bitboard::Bitboard::relative_rank (7 samples, 0.08%)</title><rect x="69.9799%" y="213" width="0.0829%" height="15" fill="rgb(247,70,30)" fg:x="5907" fg:w="7"/><text x="70.2299%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::rank (7 samples, 0.08%)</title><rect x="69.9799%" y="197" width="0.0829%" height="15" fill="rgb(212,68,19)" fg:x="5907" fg:w="7"/><text x="70.2299%" y="207.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (9 samples, 0.11%)</title><rect x="71.0935%" y="213" width="0.1066%" height="15" fill="rgb(240,187,13)" fg:x="6001" fg:w="9"/><text x="71.3435%" y="223.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.58%)</title><rect x="71.2001%" y="213" width="0.5805%" height="15" fill="rgb(223,113,26)" fg:x="6010" fg:w="49"/><text x="71.4501%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (49 samples, 0.58%)</title><rect x="71.2001%" y="197" width="0.5805%" height="15" fill="rgb(206,192,2)" fg:x="6010" fg:w="49"/><text x="71.4501%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::first (48 samples, 0.57%)</title><rect x="71.2119%" y="181" width="0.5687%" height="15" fill="rgb(241,108,4)" fg:x="6011" fg:w="48"/><text x="71.4619%" y="191.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (90 samples, 1.07%)</title><rect x="71.7806%" y="213" width="1.0662%" height="15" fill="rgb(247,173,49)" fg:x="6059" fg:w="90"/><text x="72.0306%" y="223.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (90 samples, 1.07%)</title><rect x="71.7806%" y="197" width="1.0662%" height="15" fill="rgb(224,114,35)" fg:x="6059" fg:w="90"/><text x="72.0306%" y="207.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (90 samples, 1.07%)</title><rect x="71.7806%" y="181" width="1.0662%" height="15" fill="rgb(245,159,27)" fg:x="6059" fg:w="90"/><text x="72.0306%" y="191.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (57 samples, 0.68%)</title><rect x="72.1715%" y="165" width="0.6753%" height="15" fill="rgb(245,172,44)" fg:x="6092" fg:w="57"/><text x="72.4215%" y="175.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (57 samples, 0.68%)</title><rect x="72.1715%" y="149" width="0.6753%" height="15" fill="rgb(236,23,11)" fg:x="6092" fg:w="57"/><text x="72.4215%" y="159.50"></text></g><g><title>&lt;arrayvec::arrayvec::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (420 samples, 4.98%)</title><rect x="76.4483%" y="181" width="4.9757%" height="15" fill="rgb(205,117,38)" fg:x="6453" fg:w="420"/><text x="76.6983%" y="191.50">&lt;array..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (590 samples, 6.99%)</title><rect x="76.4483%" y="197" width="6.9897%" height="15" fill="rgb(237,72,25)" fg:x="6453" fg:w="590"/><text x="76.6983%" y="207.50">&lt;core::it..</text></g><g><title>core::option::Option&lt;T&gt;::map (170 samples, 2.01%)</title><rect x="81.4240%" y="181" width="2.0140%" height="15" fill="rgb(244,70,9)" fg:x="6873" fg:w="170"/><text x="81.6740%" y="191.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (158 samples, 1.87%)</title><rect x="81.5662%" y="165" width="1.8718%" height="15" fill="rgb(217,125,39)" fg:x="6885" fg:w="158"/><text x="81.8162%" y="175.50">c..</text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}} (158 samples, 1.87%)</title><rect x="81.5662%" y="149" width="1.8718%" height="15" fill="rgb(235,36,10)" fg:x="6885" fg:w="158"/><text x="81.8162%" y="159.50">r..</text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::clone::Clone&gt;::clone (45 samples, 0.53%)</title><rect x="83.4380%" y="197" width="0.5331%" height="15" fill="rgb(251,123,47)" fg:x="7043" fg:w="45"/><text x="83.6880%" y="207.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::len (6 samples, 0.07%)</title><rect x="91.4347%" y="133" width="0.0711%" height="15" fill="rgb(221,13,13)" fg:x="7718" fg:w="6"/><text x="91.6847%" y="143.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::len (6 samples, 0.07%)</title><rect x="91.4347%" y="117" width="0.0711%" height="15" fill="rgb(238,131,9)" fg:x="7718" fg:w="6"/><text x="91.6847%" y="127.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (784 samples, 9.29%)</title><rect x="83.9711%" y="197" width="9.2880%" height="15" fill="rgb(211,50,8)" fg:x="7088" fg:w="784"/><text x="84.2211%" y="207.50">&lt;retroboard::..</text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (154 samples, 1.82%)</title><rect x="91.4347%" y="181" width="1.8244%" height="15" fill="rgb(245,182,24)" fg:x="7718" fg:w="154"/><text x="91.6847%" y="191.50">a..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (154 samples, 1.82%)</title><rect x="91.4347%" y="165" width="1.8244%" height="15" fill="rgb(242,14,37)" fg:x="7718" fg:w="154"/><text x="91.6847%" y="175.50">a..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (154 samples, 1.82%)</title><rect x="91.4347%" y="149" width="1.8244%" height="15" fill="rgb(246,228,12)" fg:x="7718" fg:w="154"/><text x="91.6847%" y="159.50">a..</text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (148 samples, 1.75%)</title><rect x="91.5057%" y="133" width="1.7533%" height="15" fill="rgb(213,55,15)" fg:x="7724" fg:w="148"/><text x="91.7557%" y="143.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (148 samples, 1.75%)</title><rect x="91.5057%" y="117" width="1.7533%" height="15" fill="rgb(209,9,3)" fg:x="7724" fg:w="148"/><text x="91.7557%" y="127.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (85 samples, 1.01%)</title><rect x="93.2591%" y="197" width="1.0070%" height="15" fill="rgb(230,59,30)" fg:x="7872" fg:w="85"/><text x="93.5091%" y="207.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (85 samples, 1.01%)</title><rect x="93.2591%" y="181" width="1.0070%" height="15" fill="rgb(209,121,21)" fg:x="7872" fg:w="85"/><text x="93.5091%" y="191.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (85 samples, 1.01%)</title><rect x="93.2591%" y="165" width="1.0070%" height="15" fill="rgb(220,109,13)" fg:x="7872" fg:w="85"/><text x="93.5091%" y="175.50"></text></g><g><title>retroboard::retropocket::RetroPockets::color (1 samples, 0.01%)</title><rect x="94.2661%" y="197" width="0.0118%" height="15" fill="rgb(232,18,1)" fg:x="7957" fg:w="1"/><text x="94.5161%" y="207.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (4 samples, 0.05%)</title><rect x="94.2779%" y="181" width="0.0474%" height="15" fill="rgb(215,41,42)" fg:x="7958" fg:w="4"/><text x="94.5279%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (1,980 samples, 23.46%)</title><rect x="72.8468%" y="213" width="23.4569%" height="15" fill="rgb(224,123,36)" fg:x="6149" fg:w="1980"/><text x="73.0968%" y="223.50">retroboard::retroboard::RetroBoard::g..</text></g><g><title>shakmaty::bitboard::Bitboard::contains (171 samples, 2.03%)</title><rect x="94.2779%" y="197" width="2.0258%" height="15" fill="rgb(240,125,3)" fg:x="7958" fg:w="171"/><text x="94.5279%" y="207.50">s..</text></g><g><title>shakmaty::bitboard::Bitboard::from_square (167 samples, 1.98%)</title><rect x="94.3253%" y="181" width="1.9784%" height="15" fill="rgb(205,98,50)" fg:x="7962" fg:w="167"/><text x="94.5753%" y="191.50">s..</text></g><g><title>retroboard::retroboard::RetroBoard::us (1 samples, 0.01%)</title><rect x="96.3038%" y="213" width="0.0118%" height="15" fill="rgb(205,185,37)" fg:x="8129" fg:w="1"/><text x="96.5538%" y="223.50"></text></g><g><title>shakmaty::attacks::bishop_attacks (1 samples, 0.01%)</title><rect x="96.5288%" y="197" width="0.0118%" height="15" fill="rgb(238,207,15)" fg:x="8148" fg:w="1"/><text x="96.7788%" y="207.50"></text></g><g><title>shakmaty::attacks::king_attacks (6 samples, 0.07%)</title><rect x="96.5407%" y="197" width="0.0711%" height="15" fill="rgb(213,199,42)" fg:x="8149" fg:w="6"/><text x="96.7907%" y="207.50"></text></g><g><title>shakmaty::attacks::bishop_attacks (6 samples, 0.07%)</title><rect x="96.6118%" y="181" width="0.0711%" height="15" fill="rgb(235,201,11)" fg:x="8155" fg:w="6"/><text x="96.8618%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="96.7066%" y="165" width="0.0237%" height="15" fill="rgb(207,46,11)" fg:x="8163" fg:w="2"/><text x="96.9566%" y="175.50"></text></g><g><title>shakmaty::attacks::queen_attacks (12 samples, 0.14%)</title><rect x="96.6118%" y="197" width="0.1422%" height="15" fill="rgb(241,35,35)" fg:x="8155" fg:w="12"/><text x="96.8618%" y="207.50"></text></g><g><title>shakmaty::attacks::rook_attacks (6 samples, 0.07%)</title><rect x="96.6829%" y="181" width="0.0711%" height="15" fill="rgb(243,32,47)" fg:x="8161" fg:w="6"/><text x="96.9329%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="96.7302%" y="165" width="0.0237%" height="15" fill="rgb(247,202,23)" fg:x="8165" fg:w="2"/><text x="96.9802%" y="175.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="96.7302%" y="149" width="0.0237%" height="15" fill="rgb(219,102,11)" fg:x="8165" fg:w="2"/><text x="96.9802%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.02%)</title><rect x="96.7302%" y="133" width="0.0237%" height="15" fill="rgb(243,110,44)" fg:x="8165" fg:w="2"/><text x="96.9802%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.02%)</title><rect x="96.7302%" y="117" width="0.0237%" height="15" fill="rgb(222,74,54)" fg:x="8165" fg:w="2"/><text x="96.9802%" y="127.50"></text></g><g><title>shakmaty::attacks::attacks (38 samples, 0.45%)</title><rect x="96.3156%" y="213" width="0.4502%" height="15" fill="rgb(216,99,12)" fg:x="8130" fg:w="38"/><text x="96.5656%" y="223.50"></text></g><g><title>shakmaty::attacks::rook_attacks (1 samples, 0.01%)</title><rect x="96.7539%" y="197" width="0.0118%" height="15" fill="rgb(226,22,26)" fg:x="8167" fg:w="1"/><text x="97.0039%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.13%)</title><rect x="96.7658%" y="197" width="0.1303%" height="15" fill="rgb(217,163,10)" fg:x="8168" fg:w="11"/><text x="97.0158%" y="207.50"></text></g><g><title>shakmaty::board::Board::piece_at::{{closure}} (11 samples, 0.13%)</title><rect x="96.7658%" y="181" width="0.1303%" height="15" fill="rgb(213,25,53)" fg:x="8168" fg:w="11"/><text x="97.0158%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (11 samples, 0.13%)</title><rect x="96.7658%" y="165" width="0.1303%" height="15" fill="rgb(252,105,26)" fg:x="8168" fg:w="11"/><text x="97.0158%" y="175.50"></text></g><g><title>shakmaty::bitboard::Bitboard::is_empty (11 samples, 0.13%)</title><rect x="96.7658%" y="149" width="0.1303%" height="15" fill="rgb(220,39,43)" fg:x="8168" fg:w="11"/><text x="97.0158%" y="159.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (4 samples, 0.05%)</title><rect x="97.4884%" y="165" width="0.0474%" height="15" fill="rgb(229,68,48)" fg:x="8229" fg:w="4"/><text x="97.7384%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pieces (2,323 samples, 27.52%)</title><rect x="70.0628%" y="229" width="27.5204%" height="15" fill="rgb(252,8,32)" fg:x="5914" fg:w="2323"/><text x="70.3128%" y="239.50">retroboard::retroboard::RetroBoard::gen_piec..</text></g><g><title>shakmaty::board::Board::piece_at (69 samples, 0.82%)</title><rect x="96.7658%" y="213" width="0.8174%" height="15" fill="rgb(223,20,43)" fg:x="8168" fg:w="69"/><text x="97.0158%" y="223.50"></text></g><g><title>shakmaty::board::Board::role_at (58 samples, 0.69%)</title><rect x="96.8961%" y="197" width="0.6871%" height="15" fill="rgb(229,81,49)" fg:x="8179" fg:w="58"/><text x="97.1461%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (8 samples, 0.09%)</title><rect x="97.4884%" y="181" width="0.0948%" height="15" fill="rgb(236,28,36)" fg:x="8229" fg:w="8"/><text x="97.7384%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (4 samples, 0.05%)</title><rect x="97.5358%" y="165" width="0.0474%" height="15" fill="rgb(249,185,26)" fg:x="8233" fg:w="4"/><text x="97.7858%" y="175.50"></text></g><g><title>shakmaty::square::&lt;impl core::convert::From&lt;shakmaty::square::Square&gt; for usize&gt;::from (1 samples, 0.01%)</title><rect x="97.5714%" y="149" width="0.0118%" height="15" fill="rgb(249,174,33)" fg:x="8236" fg:w="1"/><text x="97.8214%" y="159.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.6306%" y="213" width="0.0118%" height="15" fill="rgb(233,201,37)" fg:x="8241" fg:w="1"/><text x="97.8806%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (1 samples, 0.01%)</title><rect x="97.6306%" y="197" width="0.0118%" height="15" fill="rgb(221,78,26)" fg:x="8241" fg:w="1"/><text x="97.8806%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::first (1 samples, 0.01%)</title><rect x="97.6306%" y="181" width="0.0118%" height="15" fill="rgb(250,127,30)" fg:x="8241" fg:w="1"/><text x="97.8806%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="97.6425%" y="149" width="0.0237%" height="15" fill="rgb(230,49,44)" fg:x="8242" fg:w="2"/><text x="97.8925%" y="159.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="97.6425%" y="181" width="0.0355%" height="15" fill="rgb(229,67,23)" fg:x="8242" fg:w="3"/><text x="97.8925%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (3 samples, 0.04%)</title><rect x="97.6425%" y="165" width="0.0355%" height="15" fill="rgb(249,83,47)" fg:x="8242" fg:w="3"/><text x="97.8925%" y="175.50"></text></g><g><title>shakmaty::bitboard::Bitboard::first (1 samples, 0.01%)</title><rect x="97.6662%" y="149" width="0.0118%" height="15" fill="rgb(215,43,3)" fg:x="8244" fg:w="1"/><text x="97.9162%" y="159.50"></text></g><g><title>&lt;arrayvec::arrayvec::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="97.7846%" y="149" width="0.0829%" height="15" fill="rgb(238,154,13)" fg:x="8254" fg:w="7"/><text x="98.0346%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.12%)</title><rect x="97.7846%" y="165" width="0.1185%" height="15" fill="rgb(219,56,2)" fg:x="8254" fg:w="10"/><text x="98.0346%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="97.8676%" y="149" width="0.0355%" height="15" fill="rgb(233,0,4)" fg:x="8261" fg:w="3"/><text x="98.1176%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.04%)</title><rect x="97.8676%" y="133" width="0.0355%" height="15" fill="rgb(235,30,7)" fg:x="8261" fg:w="3"/><text x="98.1176%" y="143.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}} (3 samples, 0.04%)</title><rect x="97.8676%" y="117" width="0.0355%" height="15" fill="rgb(250,79,13)" fg:x="8261" fg:w="3"/><text x="98.1176%" y="127.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="97.9031%" y="165" width="0.0118%" height="15" fill="rgb(211,146,34)" fg:x="8264" fg:w="1"/><text x="98.1531%" y="175.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.13%)</title><rect x="97.9149%" y="165" width="0.1303%" height="15" fill="rgb(228,22,38)" fg:x="8265" fg:w="11"/><text x="98.1649%" y="175.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (4 samples, 0.05%)</title><rect x="97.9979%" y="149" width="0.0474%" height="15" fill="rgb(235,168,5)" fg:x="8272" fg:w="4"/><text x="98.2479%" y="159.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (4 samples, 0.05%)</title><rect x="97.9979%" y="133" width="0.0474%" height="15" fill="rgb(221,155,16)" fg:x="8272" fg:w="4"/><text x="98.2479%" y="143.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (4 samples, 0.05%)</title><rect x="97.9979%" y="117" width="0.0474%" height="15" fill="rgb(215,215,53)" fg:x="8272" fg:w="4"/><text x="98.2479%" y="127.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (4 samples, 0.05%)</title><rect x="97.9979%" y="101" width="0.0474%" height="15" fill="rgb(223,4,10)" fg:x="8272" fg:w="4"/><text x="98.2479%" y="111.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (4 samples, 0.05%)</title><rect x="97.9979%" y="85" width="0.0474%" height="15" fill="rgb(234,103,6)" fg:x="8272" fg:w="4"/><text x="98.2479%" y="95.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawn_uncaptures (37 samples, 0.44%)</title><rect x="97.6425%" y="197" width="0.4383%" height="15" fill="rgb(227,97,0)" fg:x="8242" fg:w="37"/><text x="97.8925%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (34 samples, 0.40%)</title><rect x="97.6780%" y="181" width="0.4028%" height="15" fill="rgb(234,150,53)" fg:x="8245" fg:w="34"/><text x="97.9280%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (3 samples, 0.04%)</title><rect x="98.0453%" y="165" width="0.0355%" height="15" fill="rgb(228,201,54)" fg:x="8276" fg:w="3"/><text x="98.2953%" y="175.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (3 samples, 0.04%)</title><rect x="98.0453%" y="149" width="0.0355%" height="15" fill="rgb(222,22,37)" fg:x="8276" fg:w="3"/><text x="98.2953%" y="159.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_unpromotion_on (40 samples, 0.47%)</title><rect x="97.6425%" y="213" width="0.4739%" height="15" fill="rgb(237,53,32)" fg:x="8242" fg:w="40"/><text x="97.8925%" y="223.50"></text></g><g><title>shakmaty::square::Square::offset (3 samples, 0.04%)</title><rect x="98.0808%" y="197" width="0.0355%" height="15" fill="rgb(233,25,53)" fg:x="8279" fg:w="3"/><text x="98.3308%" y="207.50"></text></g><g><title>core::num::&lt;impl i32&gt;::checked_add (3 samples, 0.04%)</title><rect x="98.0808%" y="181" width="0.0355%" height="15" fill="rgb(210,40,34)" fg:x="8279" fg:w="3"/><text x="98.3308%" y="191.50"></text></g><g><title>core::num::&lt;impl i32&gt;::overflowing_add (3 samples, 0.04%)</title><rect x="98.0808%" y="165" width="0.0355%" height="15" fill="rgb(241,220,44)" fg:x="8279" fg:w="3"/><text x="98.3308%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::pseudo_legal_unmoves (2,542 samples, 30.11%)</title><rect x="68.0133%" y="245" width="30.1149%" height="15" fill="rgb(235,28,35)" fg:x="5741" fg:w="2542"/><text x="68.2633%" y="255.50">retroboard::retroboard::RetroBoard::pseudo_legal_..</text></g><g><title>retroboard::retroboard::RetroBoard::gen_unpromotion (46 samples, 0.54%)</title><rect x="97.5832%" y="229" width="0.5450%" height="15" fill="rgb(210,56,17)" fg:x="8237" fg:w="46"/><text x="97.8332%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::relative_rank (1 samples, 0.01%)</title><rect x="98.1163%" y="213" width="0.0118%" height="15" fill="rgb(224,130,29)" fg:x="8282" fg:w="1"/><text x="98.3663%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::rank (1 samples, 0.01%)</title><rect x="98.1163%" y="197" width="0.0118%" height="15" fill="rgb(235,212,8)" fg:x="8282" fg:w="1"/><text x="98.3663%" y="207.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (1 samples, 0.01%)</title><rect x="98.1874%" y="229" width="0.0118%" height="15" fill="rgb(223,33,50)" fg:x="8288" fg:w="1"/><text x="98.4374%" y="239.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="98.1993%" y="229" width="0.0237%" height="15" fill="rgb(219,149,13)" fg:x="8289" fg:w="2"/><text x="98.4493%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (2 samples, 0.02%)</title><rect x="98.1993%" y="213" width="0.0237%" height="15" fill="rgb(250,156,29)" fg:x="8289" fg:w="2"/><text x="98.4493%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::first (2 samples, 0.02%)</title><rect x="98.1993%" y="197" width="0.0237%" height="15" fill="rgb(216,193,19)" fg:x="8289" fg:w="2"/><text x="98.4493%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::slider_blockers (9 samples, 0.11%)</title><rect x="98.1282%" y="245" width="0.1066%" height="15" fill="rgb(216,135,14)" fg:x="8283" fg:w="9"/><text x="98.3782%" y="255.50"></text></g><g><title>shakmaty::attacks::between (1 samples, 0.01%)</title><rect x="98.2230%" y="229" width="0.0118%" height="15" fill="rgb(241,47,5)" fg:x="8291" fg:w="1"/><text x="98.4730%" y="239.50"></text></g><g><title>shakmaty::attacks::ray (1 samples, 0.01%)</title><rect x="98.2230%" y="213" width="0.0118%" height="15" fill="rgb(233,42,35)" fg:x="8291" fg:w="1"/><text x="98.4730%" y="223.50"></text></g><g><title>retroboard::retroboard::retro_attacks (2 samples, 0.02%)</title><rect x="98.2348%" y="245" width="0.0237%" height="15" fill="rgb(231,13,6)" fg:x="8292" fg:w="2"/><text x="98.4848%" y="255.50"></text></g><g><title>shakmaty::attacks::attacks (2 samples, 0.02%)</title><rect x="98.2348%" y="229" width="0.0237%" height="15" fill="rgb(207,181,40)" fg:x="8292" fg:w="2"/><text x="98.4848%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::count (2 samples, 0.02%)</title><rect x="98.2585%" y="245" width="0.0237%" height="15" fill="rgb(254,173,49)" fg:x="8294" fg:w="2"/><text x="98.5085%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (2 samples, 0.02%)</title><rect x="98.2585%" y="229" width="0.0237%" height="15" fill="rgb(221,1,38)" fg:x="8294" fg:w="2"/><text x="98.5085%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,297 samples, 98.29%)</title><rect x="0.0000%" y="565" width="98.2940%" height="15" fill="rgb(206,124,46)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="575.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,297 samples, 98.29%)</title><rect x="0.0000%" y="549" width="98.2940%" height="15" fill="rgb(249,21,11)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="559.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8,297 samples, 98.29%)</title><rect x="0.0000%" y="533" width="98.2940%" height="15" fill="rgb(222,201,40)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="543.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>retroboard::perft::{{closure}} (8,297 samples, 98.29%)</title><rect x="0.0000%" y="517" width="98.2940%" height="15" fill="rgb(235,61,29)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="527.50">retroboard::perft::{{closure}}</text></g><g><title>retroboard::perft (8,297 samples, 98.29%)</title><rect x="0.0000%" y="501" width="98.2940%" height="15" fill="rgb(219,207,3)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="511.50">retroboard::perft</text></g><g><title>core::iter::traits::iterator::Iterator::sum (8,297 samples, 98.29%)</title><rect x="0.0000%" y="485" width="98.2940%" height="15" fill="rgb(222,56,46)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="495.50">core::iter::traits::iterator::Iterator::sum</text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (8,297 samples, 98.29%)</title><rect x="0.0000%" y="469" width="98.2940%" height="15" fill="rgb(239,76,54)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="479.50">&lt;u64 as core::iter::traits::accum::Sum&gt;::sum</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,297 samples, 98.29%)</title><rect x="0.0000%" y="453" width="98.2940%" height="15" fill="rgb(231,124,27)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="463.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,297 samples, 98.29%)</title><rect x="0.0000%" y="437" width="98.2940%" height="15" fill="rgb(249,195,6)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="447.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8,297 samples, 98.29%)</title><rect x="0.0000%" y="421" width="98.2940%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="431.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>retroboard::perft::{{closure}} (8,297 samples, 98.29%)</title><rect x="0.0000%" y="405" width="98.2940%" height="15" fill="rgb(206,201,31)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="415.50">retroboard::perft::{{closure}}</text></g><g><title>retroboard::perft (8,297 samples, 98.29%)</title><rect x="0.0000%" y="389" width="98.2940%" height="15" fill="rgb(231,57,52)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="399.50">retroboard::perft</text></g><g><title>core::iter::traits::iterator::Iterator::sum (8,297 samples, 98.29%)</title><rect x="0.0000%" y="373" width="98.2940%" height="15" fill="rgb(248,177,22)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="383.50">core::iter::traits::iterator::Iterator::sum</text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (8,297 samples, 98.29%)</title><rect x="0.0000%" y="357" width="98.2940%" height="15" fill="rgb(215,211,37)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="367.50">&lt;u64 as core::iter::traits::accum::Sum&gt;::sum</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,297 samples, 98.29%)</title><rect x="0.0000%" y="341" width="98.2940%" height="15" fill="rgb(241,128,51)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="351.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,297 samples, 98.29%)</title><rect x="0.0000%" y="325" width="98.2940%" height="15" fill="rgb(227,165,31)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="335.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8,297 samples, 98.29%)</title><rect x="0.0000%" y="309" width="98.2940%" height="15" fill="rgb(228,167,24)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="319.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>retroboard::perft::{{closure}} (8,297 samples, 98.29%)</title><rect x="0.0000%" y="293" width="98.2940%" height="15" fill="rgb(228,143,12)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="303.50">retroboard::perft::{{closure}}</text></g><g><title>retroboard::perft (8,297 samples, 98.29%)</title><rect x="0.0000%" y="277" width="98.2940%" height="15" fill="rgb(249,149,8)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="287.50">retroboard::perft</text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves (8,297 samples, 98.29%)</title><rect x="0.0000%" y="261" width="98.2940%" height="15" fill="rgb(243,35,44)" fg:x="0" fg:w="8297"/><text x="0.2500%" y="271.50">retroboard::retroboard::RetroBoard::legal_unmoves</text></g><g><title>shakmaty::board::Board::piece_at (1 samples, 0.01%)</title><rect x="98.2822%" y="245" width="0.0118%" height="15" fill="rgb(246,89,9)" fg:x="8296" fg:w="1"/><text x="98.5322%" y="255.50"></text></g><g><title>shakmaty::board::Board::role_at (1 samples, 0.01%)</title><rect x="98.2822%" y="229" width="0.0118%" height="15" fill="rgb(233,213,13)" fg:x="8296" fg:w="1"/><text x="98.5322%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (1 samples, 0.01%)</title><rect x="98.2822%" y="213" width="0.0118%" height="15" fill="rgb(233,141,41)" fg:x="8296" fg:w="1"/><text x="98.5322%" y="223.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (1 samples, 0.01%)</title><rect x="98.2822%" y="197" width="0.0118%" height="15" fill="rgb(239,167,4)" fg:x="8296" fg:w="1"/><text x="98.5322%" y="207.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 0.01%)</title><rect x="98.2940%" y="565" width="0.0118%" height="15" fill="rgb(209,217,16)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="575.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 0.01%)</title><rect x="98.2940%" y="549" width="0.0118%" height="15" fill="rgb(219,88,35)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="559.50"></text></g><g><title>__libc_start_main (1 samples, 0.01%)</title><rect x="98.2940%" y="533" width="0.0118%" height="15" fill="rgb(220,193,23)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="543.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 0.01%)</title><rect x="98.2940%" y="517" width="0.0118%" height="15" fill="rgb(230,90,52)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.01%)</title><rect x="98.2940%" y="501" width="0.0118%" height="15" fill="rgb(252,106,19)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="511.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="98.2940%" y="485" width="0.0118%" height="15" fill="rgb(206,74,20)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="495.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="98.2940%" y="469" width="0.0118%" height="15" fill="rgb(230,138,44)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="479.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="98.2940%" y="453" width="0.0118%" height="15" fill="rgb(235,182,43)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="463.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.01%)</title><rect x="98.2940%" y="437" width="0.0118%" height="15" fill="rgb(242,16,51)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="447.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="98.2940%" y="421" width="0.0118%" height="15" fill="rgb(248,9,4)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="431.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="98.2940%" y="405" width="0.0118%" height="15" fill="rgb(210,31,22)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="415.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="98.2940%" y="389" width="0.0118%" height="15" fill="rgb(239,54,39)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.01%)</title><rect x="98.2940%" y="373" width="0.0118%" height="15" fill="rgb(230,99,41)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="383.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.01%)</title><rect x="98.2940%" y="357" width="0.0118%" height="15" fill="rgb(253,106,12)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="367.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.01%)</title><rect x="98.2940%" y="341" width="0.0118%" height="15" fill="rgb(213,46,41)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="98.2940%" y="325" width="0.0118%" height="15" fill="rgb(215,133,35)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="335.50"></text></g><g><title>retroboard::main (1 samples, 0.01%)</title><rect x="98.2940%" y="309" width="0.0118%" height="15" fill="rgb(213,28,5)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="319.50"></text></g><g><title>retroboard::retroboard (1 samples, 0.01%)</title><rect x="98.2940%" y="293" width="0.0118%" height="15" fill="rgb(215,77,49)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="303.50"></text></g><g><title>retroboard::perft (1 samples, 0.01%)</title><rect x="98.2940%" y="277" width="0.0118%" height="15" fill="rgb(248,100,22)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="98.2940%" y="261" width="0.0118%" height="15" fill="rgb(208,67,9)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="271.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="98.2940%" y="245" width="0.0118%" height="15" fill="rgb(219,133,21)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="98.2940%" y="229" width="0.0118%" height="15" fill="rgb(246,46,29)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="98.2940%" y="213" width="0.0118%" height="15" fill="rgb(246,185,52)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="98.2940%" y="197" width="0.0118%" height="15" fill="rgb(252,136,11)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="207.50"></text></g><g><title>retroboard::perft::{{closure}} (1 samples, 0.01%)</title><rect x="98.2940%" y="181" width="0.0118%" height="15" fill="rgb(219,138,53)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="191.50"></text></g><g><title>retroboard::perft (1 samples, 0.01%)</title><rect x="98.2940%" y="165" width="0.0118%" height="15" fill="rgb(211,51,23)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="98.2940%" y="149" width="0.0118%" height="15" fill="rgb(247,221,28)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="159.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="98.2940%" y="133" width="0.0118%" height="15" fill="rgb(251,222,45)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="98.2940%" y="117" width="0.0118%" height="15" fill="rgb(217,162,53)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="98.2940%" y="101" width="0.0118%" height="15" fill="rgb(229,93,14)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="98.2940%" y="85" width="0.0118%" height="15" fill="rgb(209,67,49)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="95.50"></text></g><g><title>retroboard::perft::{{closure}} (1 samples, 0.01%)</title><rect x="98.2940%" y="69" width="0.0118%" height="15" fill="rgb(213,87,29)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="79.50"></text></g><g><title>retroboard::retroboard::RetroBoard::push (1 samples, 0.01%)</title><rect x="98.2940%" y="53" width="0.0118%" height="15" fill="rgb(205,151,52)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="63.50"></text></g><g><title>retroboard::retropocket::RetroPocket::decr (1 samples, 0.01%)</title><rect x="98.2940%" y="37" width="0.0118%" height="15" fill="rgb(253,215,39)" fg:x="8297" fg:w="1"/><text x="98.5440%" y="47.50"></text></g><g><title>[[stack]] (13 samples, 0.15%)</title><rect x="98.3059%" y="565" width="0.1540%" height="15" fill="rgb(221,220,41)" fg:x="8298" fg:w="13"/><text x="98.5559%" y="575.50"></text></g><g><title>[[stack]] (13 samples, 0.15%)</title><rect x="98.3059%" y="549" width="0.1540%" height="15" fill="rgb(218,133,21)" fg:x="8298" fg:w="13"/><text x="98.5559%" y="559.50"></text></g><g><title>retroboard::retroboard::RetroBoard::is_safe (13 samples, 0.15%)</title><rect x="98.3059%" y="533" width="0.1540%" height="15" fill="rgb(221,193,43)" fg:x="8298" fg:w="13"/><text x="98.5559%" y="543.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (3 samples, 0.04%)</title><rect x="98.4599%" y="533" width="0.0355%" height="15" fill="rgb(240,128,52)" fg:x="8311" fg:w="3"/><text x="98.7099%" y="543.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one (3 samples, 0.04%)</title><rect x="98.4599%" y="517" width="0.0355%" height="15" fill="rgb(253,114,12)" fg:x="8311" fg:w="3"/><text x="98.7099%" y="527.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}} (3 samples, 0.04%)</title><rect x="98.4599%" y="501" width="0.0355%" height="15" fill="rgb(215,223,47)" fg:x="8311" fg:w="3"/><text x="98.7099%" y="511.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (3 samples, 0.04%)</title><rect x="98.4599%" y="485" width="0.0355%" height="15" fill="rgb(248,225,23)" fg:x="8311" fg:w="3"/><text x="98.7099%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="98.4599%" y="565" width="0.0474%" height="15" fill="rgb(250,108,0)" fg:x="8311" fg:w="4"/><text x="98.7099%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="98.4599%" y="549" width="0.0474%" height="15" fill="rgb(228,208,7)" fg:x="8311" fg:w="4"/><text x="98.7099%" y="559.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (1 samples, 0.01%)</title><rect x="98.4954%" y="533" width="0.0118%" height="15" fill="rgb(244,45,10)" fg:x="8314" fg:w="1"/><text x="98.7454%" y="543.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.02%)</title><rect x="98.5073%" y="213" width="0.0237%" height="15" fill="rgb(207,125,25)" fg:x="8315" fg:w="2"/><text x="98.7573%" y="223.50"></text></g><g><title>&lt;retroboard::retroboard::RetroBoard as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="98.5310%" y="197" width="0.0355%" height="15" fill="rgb(210,195,18)" fg:x="8317" fg:w="3"/><text x="98.7810%" y="207.50"></text></g><g><title>retroboard::perft (1 samples, 0.01%)</title><rect x="98.5665%" y="197" width="0.0118%" height="15" fill="rgb(249,80,12)" fg:x="8320" fg:w="1"/><text x="98.8165%" y="207.50"></text></g><g><title>retroboard::retropocket::RetroPocket::decr (14 samples, 0.17%)</title><rect x="98.6850%" y="181" width="0.1659%" height="15" fill="rgb(221,65,9)" fg:x="8330" fg:w="14"/><text x="98.9350%" y="191.50"></text></g><g><title>retroboard::unmove::UnMove::uncapture (6 samples, 0.07%)</title><rect x="98.8508%" y="181" width="0.0711%" height="15" fill="rgb(235,49,36)" fg:x="8344" fg:w="6"/><text x="99.1008%" y="191.50"></text></g><g><title>shakmaty::board::Board::remove_piece_at (19 samples, 0.23%)</title><rect x="98.9219%" y="181" width="0.2251%" height="15" fill="rgb(225,32,20)" fg:x="8350" fg:w="19"/><text x="99.1719%" y="191.50"></text></g><g><title>shakmaty::board::Board::piece_at (19 samples, 0.23%)</title><rect x="98.9219%" y="165" width="0.2251%" height="15" fill="rgb(215,141,46)" fg:x="8350" fg:w="19"/><text x="99.1719%" y="175.50"></text></g><g><title>shakmaty::board::Board::role_at (19 samples, 0.23%)</title><rect x="98.9219%" y="149" width="0.2251%" height="15" fill="rgb(250,160,47)" fg:x="8350" fg:w="19"/><text x="99.1719%" y="159.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (1 samples, 0.01%)</title><rect x="99.1352%" y="133" width="0.0118%" height="15" fill="rgb(216,222,40)" fg:x="8368" fg:w="1"/><text x="99.3852%" y="143.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (1 samples, 0.01%)</title><rect x="99.1352%" y="117" width="0.0118%" height="15" fill="rgb(234,217,39)" fg:x="8368" fg:w="1"/><text x="99.3852%" y="127.50"></text></g><g><title>shakmaty::bitboard::Bitboard::toggle (6 samples, 0.07%)</title><rect x="99.1470%" y="165" width="0.0711%" height="15" fill="rgb(207,178,40)" fg:x="8369" fg:w="6"/><text x="99.3970%" y="175.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitXorAssign&lt;T&gt;&gt;::bitxor_assign (6 samples, 0.07%)</title><rect x="99.1470%" y="149" width="0.0711%" height="15" fill="rgb(221,136,13)" fg:x="8369" fg:w="6"/><text x="99.3970%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (64 samples, 0.76%)</title><rect x="98.5073%" y="293" width="0.7582%" height="15" fill="rgb(249,199,10)" fg:x="8315" fg:w="64"/><text x="98.7573%" y="303.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (64 samples, 0.76%)</title><rect x="98.5073%" y="277" width="0.7582%" height="15" fill="rgb(249,222,13)" fg:x="8315" fg:w="64"/><text x="98.7573%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (64 samples, 0.76%)</title><rect x="98.5073%" y="261" width="0.7582%" height="15" fill="rgb(244,185,38)" fg:x="8315" fg:w="64"/><text x="98.7573%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (64 samples, 0.76%)</title><rect x="98.5073%" y="245" width="0.7582%" height="15" fill="rgb(236,202,9)" fg:x="8315" fg:w="64"/><text x="98.7573%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (64 samples, 0.76%)</title><rect x="98.5073%" y="229" width="0.7582%" height="15" fill="rgb(250,229,37)" fg:x="8315" fg:w="64"/><text x="98.7573%" y="239.50"></text></g><g><title>retroboard::perft::{{closure}} (62 samples, 0.73%)</title><rect x="98.5310%" y="213" width="0.7345%" height="15" fill="rgb(206,174,23)" fg:x="8317" fg:w="62"/><text x="98.7810%" y="223.50"></text></g><g><title>retroboard::retroboard::RetroBoard::push (58 samples, 0.69%)</title><rect x="98.5784%" y="197" width="0.6871%" height="15" fill="rgb(211,33,43)" fg:x="8321" fg:w="58"/><text x="98.8284%" y="207.50"></text></g><g><title>shakmaty::board::Board::set_piece_at (10 samples, 0.12%)</title><rect x="99.1470%" y="181" width="0.1185%" height="15" fill="rgb(245,58,50)" fg:x="8369" fg:w="10"/><text x="99.3970%" y="191.50"></text></g><g><title>shakmaty::board::Board::discard_piece_at (4 samples, 0.05%)</title><rect x="99.2181%" y="165" width="0.0474%" height="15" fill="rgb(244,68,36)" fg:x="8375" fg:w="4"/><text x="99.4681%" y="175.50"></text></g><g><title>shakmaty::bitboard::Bitboard::discard (4 samples, 0.05%)</title><rect x="99.2181%" y="149" width="0.0474%" height="15" fill="rgb(232,229,15)" fg:x="8375" fg:w="4"/><text x="99.4681%" y="159.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAndAssign&lt;T&gt;&gt;::bitand_assign (4 samples, 0.05%)</title><rect x="99.2181%" y="133" width="0.0474%" height="15" fill="rgb(254,30,23)" fg:x="8375" fg:w="4"/><text x="99.4681%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.02%)</title><rect x="99.4550%" y="213" width="0.0237%" height="15" fill="rgb(235,160,14)" fg:x="8395" fg:w="2"/><text x="99.7050%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="99.4550%" y="197" width="0.0237%" height="15" fill="rgb(212,155,44)" fg:x="8395" fg:w="2"/><text x="99.7050%" y="207.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitXor&lt;T&gt;&gt;::bitxor (1 samples, 0.01%)</title><rect x="99.5735%" y="197" width="0.0118%" height="15" fill="rgb(226,2,50)" fg:x="8405" fg:w="1"/><text x="99.8235%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::king_of (3 samples, 0.04%)</title><rect x="99.5854%" y="197" width="0.0355%" height="15" fill="rgb(234,177,6)" fg:x="8406" fg:w="3"/><text x="99.8354%" y="207.50"></text></g><g><title>shakmaty::board::Board::king_of (3 samples, 0.04%)</title><rect x="99.5854%" y="181" width="0.0355%" height="15" fill="rgb(217,24,9)" fg:x="8406" fg:w="3"/><text x="99.8354%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::single_square (3 samples, 0.04%)</title><rect x="99.5854%" y="165" width="0.0355%" height="15" fill="rgb(220,13,46)" fg:x="8406" fg:w="3"/><text x="99.8354%" y="175.50"></text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (3 samples, 0.04%)</title><rect x="99.5854%" y="149" width="0.0355%" height="15" fill="rgb(239,221,27)" fg:x="8406" fg:w="3"/><text x="99.8354%" y="159.50"></text></g><g><title>shakmaty::attacks::attacks (6 samples, 0.07%)</title><rect x="99.6209%" y="197" width="0.0711%" height="15" fill="rgb(222,198,25)" fg:x="8409" fg:w="6"/><text x="99.8709%" y="207.50"></text></g><g><title>shakmaty::attacks::queen_attacks (1 samples, 0.01%)</title><rect x="99.6801%" y="181" width="0.0118%" height="15" fill="rgb(211,99,13)" fg:x="8414" fg:w="1"/><text x="99.9301%" y="191.50"></text></g><g><title>shakmaty::attacks::bishop_attacks (1 samples, 0.01%)</title><rect x="99.6801%" y="165" width="0.0118%" height="15" fill="rgb(232,111,31)" fg:x="8414" fg:w="1"/><text x="99.9301%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (23 samples, 0.27%)</title><rect x="99.4787%" y="213" width="0.2725%" height="15" fill="rgb(245,82,37)" fg:x="8397" fg:w="23"/><text x="99.7287%" y="223.50"></text></g><g><title>shakmaty::board::Board::piece_at (5 samples, 0.06%)</title><rect x="99.6920%" y="197" width="0.0592%" height="15" fill="rgb(227,149,46)" fg:x="8415" fg:w="5"/><text x="99.9420%" y="207.50"></text></g><g><title>shakmaty::board::Board::role_at (4 samples, 0.05%)</title><rect x="99.7038%" y="181" width="0.0474%" height="15" fill="rgb(218,36,50)" fg:x="8416" fg:w="4"/><text x="99.9538%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (2 samples, 0.02%)</title><rect x="99.7275%" y="165" width="0.0237%" height="15" fill="rgb(226,80,48)" fg:x="8418" fg:w="2"/><text x="99.9775%" y="175.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (2 samples, 0.02%)</title><rect x="99.7275%" y="149" width="0.0237%" height="15" fill="rgb(238,224,15)" fg:x="8418" fg:w="2"/><text x="99.9775%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.01%)</title><rect x="99.7512%" y="197" width="0.0118%" height="15" fill="rgb(241,136,10)" fg:x="8420" fg:w="1"/><text x="100.0012%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::king_of (6 samples, 0.07%)</title><rect x="99.7512%" y="213" width="0.0711%" height="15" fill="rgb(208,32,45)" fg:x="8420" fg:w="6"/><text x="100.0012%" y="223.50"></text></g><g><title>shakmaty::board::Board::king_of (5 samples, 0.06%)</title><rect x="99.7631%" y="197" width="0.0592%" height="15" fill="rgb(207,135,9)" fg:x="8421" fg:w="5"/><text x="100.0131%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::single_square (5 samples, 0.06%)</title><rect x="99.7631%" y="181" width="0.0592%" height="15" fill="rgb(206,86,44)" fg:x="8421" fg:w="5"/><text x="100.0131%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (5 samples, 0.06%)</title><rect x="99.7631%" y="165" width="0.0592%" height="15" fill="rgb(245,177,15)" fg:x="8421" fg:w="5"/><text x="100.0131%" y="175.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (49 samples, 0.58%)</title><rect x="99.2655%" y="277" width="0.5805%" height="15" fill="rgb(206,64,50)" fg:x="8379" fg:w="49"/><text x="99.5155%" y="287.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one (47 samples, 0.56%)</title><rect x="99.2892%" y="261" width="0.5568%" height="15" fill="rgb(234,36,40)" fg:x="8381" fg:w="47"/><text x="99.5392%" y="271.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}} (46 samples, 0.54%)</title><rect x="99.3010%" y="245" width="0.5450%" height="15" fill="rgb(213,64,8)" fg:x="8382" fg:w="46"/><text x="99.5510%" y="255.50"></text></g><g><title>retroboard::retroboard::RetroBoard::is_safe (43 samples, 0.51%)</title><rect x="99.3366%" y="229" width="0.5094%" height="15" fill="rgb(210,75,36)" fg:x="8385" fg:w="43"/><text x="99.5866%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (2 samples, 0.02%)</title><rect x="99.8223%" y="213" width="0.0237%" height="15" fill="rgb(229,88,21)" fg:x="8426" fg:w="2"/><text x="100.0723%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (2 samples, 0.02%)</title><rect x="99.8223%" y="197" width="0.0237%" height="15" fill="rgb(252,204,47)" fg:x="8426" fg:w="2"/><text x="100.0723%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawns (1 samples, 0.01%)</title><rect x="99.8460%" y="261" width="0.0118%" height="15" fill="rgb(208,77,27)" fg:x="8428" fg:w="1"/><text x="100.0960%" y="271.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawn_uncaptures (1 samples, 0.01%)</title><rect x="99.8460%" y="245" width="0.0118%" height="15" fill="rgb(221,76,26)" fg:x="8428" fg:w="1"/><text x="100.0960%" y="255.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.8460%" y="229" width="0.0118%" height="15" fill="rgb(225,139,18)" fg:x="8428" fg:w="1"/><text x="100.0960%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (1 samples, 0.01%)</title><rect x="99.8460%" y="213" width="0.0118%" height="15" fill="rgb(230,137,11)" fg:x="8428" fg:w="1"/><text x="100.0960%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="99.8460%" y="197" width="0.0118%" height="15" fill="rgb(212,28,1)" fg:x="8428" fg:w="1"/><text x="100.0960%" y="207.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.09%)</title><rect x="99.8815%" y="229" width="0.0948%" height="15" fill="rgb(248,164,17)" fg:x="8431" fg:w="8"/><text x="100.1315%" y="239.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (1 samples, 0.01%)</title><rect x="99.9645%" y="213" width="0.0118%" height="15" fill="rgb(222,171,42)" fg:x="8438" fg:w="1"/><text x="100.2145%" y="223.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (1 samples, 0.01%)</title><rect x="99.9645%" y="197" width="0.0118%" height="15" fill="rgb(243,84,45)" fg:x="8438" fg:w="1"/><text x="100.2145%" y="207.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (1 samples, 0.01%)</title><rect x="99.9645%" y="181" width="0.0118%" height="15" fill="rgb(252,49,23)" fg:x="8438" fg:w="1"/><text x="100.2145%" y="191.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (1 samples, 0.01%)</title><rect x="99.9645%" y="165" width="0.0118%" height="15" fill="rgb(215,19,7)" fg:x="8438" fg:w="1"/><text x="100.2145%" y="175.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (1 samples, 0.01%)</title><rect x="99.9645%" y="149" width="0.0118%" height="15" fill="rgb(238,81,41)" fg:x="8438" fg:w="1"/><text x="100.2145%" y="159.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (10 samples, 0.12%)</title><rect x="99.8697%" y="245" width="0.1185%" height="15" fill="rgb(210,199,37)" fg:x="8430" fg:w="10"/><text x="100.1197%" y="255.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (1 samples, 0.01%)</title><rect x="99.9763%" y="229" width="0.0118%" height="15" fill="rgb(244,192,49)" fg:x="8439" fg:w="1"/><text x="100.2263%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (1 samples, 0.01%)</title><rect x="99.9763%" y="213" width="0.0118%" height="15" fill="rgb(226,211,11)" fg:x="8439" fg:w="1"/><text x="100.2263%" y="223.50"></text></g><g><title>all (8,441 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(236,162,54)" fg:x="0" fg:w="8441"/><text x="0.2500%" y="607.50"></text></g><g><title>retroboard (8,441 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(220,229,9)" fg:x="0" fg:w="8441"/><text x="0.2500%" y="591.50">retroboard</text></g><g><title>retroboard::main (126 samples, 1.49%)</title><rect x="98.5073%" y="565" width="1.4927%" height="15" fill="rgb(250,87,22)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="575.50"></text></g><g><title>retroboard::retroboard (126 samples, 1.49%)</title><rect x="98.5073%" y="549" width="1.4927%" height="15" fill="rgb(239,43,17)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="559.50"></text></g><g><title>retroboard::perft (126 samples, 1.49%)</title><rect x="98.5073%" y="533" width="1.4927%" height="15" fill="rgb(231,177,25)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (126 samples, 1.49%)</title><rect x="98.5073%" y="517" width="1.4927%" height="15" fill="rgb(219,179,1)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="527.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (126 samples, 1.49%)</title><rect x="98.5073%" y="501" width="1.4927%" height="15" fill="rgb(238,219,53)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (126 samples, 1.49%)</title><rect x="98.5073%" y="485" width="1.4927%" height="15" fill="rgb(232,167,36)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (126 samples, 1.49%)</title><rect x="98.5073%" y="469" width="1.4927%" height="15" fill="rgb(244,19,51)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (126 samples, 1.49%)</title><rect x="98.5073%" y="453" width="1.4927%" height="15" fill="rgb(224,6,22)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="463.50"></text></g><g><title>retroboard::perft::{{closure}} (126 samples, 1.49%)</title><rect x="98.5073%" y="437" width="1.4927%" height="15" fill="rgb(224,145,5)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="447.50"></text></g><g><title>retroboard::perft (126 samples, 1.49%)</title><rect x="98.5073%" y="421" width="1.4927%" height="15" fill="rgb(234,130,49)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (126 samples, 1.49%)</title><rect x="98.5073%" y="405" width="1.4927%" height="15" fill="rgb(254,6,2)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="415.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (126 samples, 1.49%)</title><rect x="98.5073%" y="389" width="1.4927%" height="15" fill="rgb(208,96,46)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (126 samples, 1.49%)</title><rect x="98.5073%" y="373" width="1.4927%" height="15" fill="rgb(239,3,39)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (126 samples, 1.49%)</title><rect x="98.5073%" y="357" width="1.4927%" height="15" fill="rgb(233,210,1)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (126 samples, 1.49%)</title><rect x="98.5073%" y="341" width="1.4927%" height="15" fill="rgb(244,137,37)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="351.50"></text></g><g><title>retroboard::perft::{{closure}} (126 samples, 1.49%)</title><rect x="98.5073%" y="325" width="1.4927%" height="15" fill="rgb(240,136,2)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="335.50"></text></g><g><title>retroboard::perft (126 samples, 1.49%)</title><rect x="98.5073%" y="309" width="1.4927%" height="15" fill="rgb(239,18,37)" fg:x="8315" fg:w="126"/><text x="98.7573%" y="319.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves (62 samples, 0.73%)</title><rect x="99.2655%" y="293" width="0.7345%" height="15" fill="rgb(218,185,22)" fg:x="8379" fg:w="62"/><text x="99.5155%" y="303.50"></text></g><g><title>retroboard::retroboard::RetroBoard::pseudo_legal_unmoves (13 samples, 0.15%)</title><rect x="99.8460%" y="277" width="0.1540%" height="15" fill="rgb(225,218,4)" fg:x="8428" fg:w="13"/><text x="100.0960%" y="287.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pieces (12 samples, 0.14%)</title><rect x="99.8578%" y="261" width="0.1422%" height="15" fill="rgb(230,182,32)" fg:x="8429" fg:w="12"/><text x="100.1078%" y="271.50"></text></g><g><title>shakmaty::board::Board::piece_at (1 samples, 0.01%)</title><rect x="99.9882%" y="245" width="0.0118%" height="15" fill="rgb(242,56,43)" fg:x="8440" fg:w="1"/><text x="100.2382%" y="255.50"></text></g><g><title>shakmaty::board::Board::role_at (1 samples, 0.01%)</title><rect x="99.9882%" y="229" width="0.0118%" height="15" fill="rgb(233,99,24)" fg:x="8440" fg:w="1"/><text x="100.2382%" y="239.50"></text></g></svg></svg>