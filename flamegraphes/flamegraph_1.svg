<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="645.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="9653"><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 0.01%)</title><rect x="0.1140%" y="261" width="0.0104%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="1"/><text x="0.3640%" y="271.50"></text></g><g><title>[libc-2.31.so] (99 samples, 1.03%)</title><rect x="0.1243%" y="261" width="1.0256%" height="15" fill="rgb(217,0,24)" fg:x="12" fg:w="99"/><text x="0.3743%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.05%)</title><rect x="4.9829%" y="229" width="0.0518%" height="15" fill="rgb(221,193,54)" fg:x="481" fg:w="5"/><text x="5.2329%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.05%)</title><rect x="4.9829%" y="213" width="0.0518%" height="15" fill="rgb(248,212,6)" fg:x="481" fg:w="5"/><text x="5.2329%" y="223.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (2 samples, 0.02%)</title><rect x="6.9616%" y="213" width="0.0207%" height="15" fill="rgb(208,68,35)" fg:x="672" fg:w="2"/><text x="7.2116%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (214 samples, 2.22%)</title><rect x="17.3418%" y="197" width="2.2169%" height="15" fill="rgb(232,128,0)" fg:x="1674" fg:w="214"/><text x="17.5918%" y="207.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (214 samples, 2.22%)</title><rect x="17.3418%" y="181" width="2.2169%" height="15" fill="rgb(207,160,47)" fg:x="1674" fg:w="214"/><text x="17.5918%" y="191.50">c..</text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitXor&lt;T&gt;&gt;::bitxor (62 samples, 0.64%)</title><rect x="27.5355%" y="181" width="0.6423%" height="15" fill="rgb(228,23,34)" fg:x="2658" fg:w="62"/><text x="27.7855%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.04%)</title><rect x="28.1778%" y="165" width="0.0414%" height="15" fill="rgb(218,30,26)" fg:x="2720" fg:w="4"/><text x="28.4278%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::king_of (292 samples, 3.02%)</title><rect x="28.1778%" y="181" width="3.0250%" height="15" fill="rgb(220,122,19)" fg:x="2720" fg:w="292"/><text x="28.4278%" y="191.50">ret..</text></g><g><title>shakmaty::board::Board::king_of (288 samples, 2.98%)</title><rect x="28.2192%" y="165" width="2.9835%" height="15" fill="rgb(250,228,42)" fg:x="2724" fg:w="288"/><text x="28.4692%" y="175.50">sha..</text></g><g><title>shakmaty::bitboard::Bitboard::single_square (288 samples, 2.98%)</title><rect x="28.2192%" y="149" width="2.9835%" height="15" fill="rgb(240,193,28)" fg:x="2724" fg:w="288"/><text x="28.4692%" y="159.50">sha..</text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (288 samples, 2.98%)</title><rect x="28.2192%" y="133" width="2.9835%" height="15" fill="rgb(216,20,37)" fg:x="2724" fg:w="288"/><text x="28.4692%" y="143.50">sha..</text></g><g><title>shakmaty::attacks::bishop_attacks (3 samples, 0.03%)</title><rect x="39.2106%" y="165" width="0.0311%" height="15" fill="rgb(206,188,39)" fg:x="3785" fg:w="3"/><text x="39.4606%" y="175.50"></text></g><g><title>shakmaty::attacks::king_attacks (7 samples, 0.07%)</title><rect x="39.2417%" y="165" width="0.0725%" height="15" fill="rgb(217,207,13)" fg:x="3788" fg:w="7"/><text x="39.4917%" y="175.50"></text></g><g><title>shakmaty::attacks::knight_attacks (1 samples, 0.01%)</title><rect x="39.3142%" y="165" width="0.0104%" height="15" fill="rgb(231,73,38)" fg:x="3795" fg:w="1"/><text x="39.5642%" y="175.50"></text></g><g><title>shakmaty::attacks::pawn_attacks (4 samples, 0.04%)</title><rect x="39.3246%" y="165" width="0.0414%" height="15" fill="rgb(225,20,46)" fg:x="3796" fg:w="4"/><text x="39.5746%" y="175.50"></text></g><g><title>shakmaty::attacks::bishop_attacks (107 samples, 1.11%)</title><rect x="39.3660%" y="149" width="1.1085%" height="15" fill="rgb(210,31,41)" fg:x="3800" fg:w="107"/><text x="39.6160%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (6 samples, 0.06%)</title><rect x="41.4068%" y="133" width="0.0622%" height="15" fill="rgb(221,200,47)" fg:x="3997" fg:w="6"/><text x="41.6568%" y="143.50"></text></g><g><title>shakmaty::attacks::queen_attacks (208 samples, 2.15%)</title><rect x="39.3660%" y="165" width="2.1548%" height="15" fill="rgb(226,26,5)" fg:x="3800" fg:w="208"/><text x="39.6160%" y="175.50">s..</text></g><g><title>shakmaty::attacks::rook_attacks (101 samples, 1.05%)</title><rect x="40.4745%" y="149" width="1.0463%" height="15" fill="rgb(249,33,26)" fg:x="3907" fg:w="101"/><text x="40.7245%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.05%)</title><rect x="41.4690%" y="133" width="0.0518%" height="15" fill="rgb(235,183,28)" fg:x="4003" fg:w="5"/><text x="41.7190%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.05%)</title><rect x="41.4690%" y="117" width="0.0518%" height="15" fill="rgb(221,5,38)" fg:x="4003" fg:w="5"/><text x="41.7190%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.05%)</title><rect x="41.4690%" y="101" width="0.0518%" height="15" fill="rgb(247,18,42)" fg:x="4003" fg:w="5"/><text x="41.7190%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.05%)</title><rect x="41.4690%" y="85" width="0.0518%" height="15" fill="rgb(241,131,45)" fg:x="4003" fg:w="5"/><text x="41.7190%" y="95.50"></text></g><g><title>shakmaty::attacks::attacks (1,004 samples, 10.40%)</title><rect x="31.2027%" y="181" width="10.4009%" height="15" fill="rgb(249,31,29)" fg:x="3012" fg:w="1004"/><text x="31.4527%" y="191.50">shakmaty::attac..</text></g><g><title>shakmaty::attacks::rook_attacks (8 samples, 0.08%)</title><rect x="41.5208%" y="165" width="0.0829%" height="15" fill="rgb(225,111,53)" fg:x="4008" fg:w="8"/><text x="41.7708%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="45.0016%" y="165" width="0.0104%" height="15" fill="rgb(238,160,17)" fg:x="4344" fg:w="1"/><text x="45.2516%" y="175.50"></text></g><g><title>shakmaty::board::Board::piece_at::{{closure}} (1 samples, 0.01%)</title><rect x="45.0016%" y="149" width="0.0104%" height="15" fill="rgb(214,148,48)" fg:x="4344" fg:w="1"/><text x="45.2516%" y="159.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (1 samples, 0.01%)</title><rect x="45.0016%" y="133" width="0.0104%" height="15" fill="rgb(232,36,49)" fg:x="4344" fg:w="1"/><text x="45.2516%" y="143.50"></text></g><g><title>shakmaty::bitboard::Bitboard::is_empty (1 samples, 0.01%)</title><rect x="45.0016%" y="117" width="0.0104%" height="15" fill="rgb(209,103,24)" fg:x="4344" fg:w="1"/><text x="45.2516%" y="127.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (10 samples, 0.10%)</title><rect x="51.1862%" y="133" width="0.1036%" height="15" fill="rgb(229,88,8)" fg:x="4941" fg:w="10"/><text x="51.4362%" y="143.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (3,207 samples, 33.22%)</title><rect x="19.5587%" y="197" width="33.2228%" height="15" fill="rgb(213,181,19)" fg:x="1888" fg:w="3207"/><text x="19.8087%" y="207.50">retroboard::retroboard::RetroBoard::does_unmove_give_c..</text></g><g><title>shakmaty::board::Board::piece_at (1,079 samples, 11.18%)</title><rect x="41.6036%" y="181" width="11.1779%" height="15" fill="rgb(254,191,54)" fg:x="4016" fg:w="1079"/><text x="41.8536%" y="191.50">shakmaty::board:..</text></g><g><title>shakmaty::board::Board::role_at (750 samples, 7.77%)</title><rect x="45.0119%" y="165" width="7.7696%" height="15" fill="rgb(241,83,37)" fg:x="4345" fg:w="750"/><text x="45.2619%" y="175.50">shakmaty::b..</text></g><g><title>shakmaty::bitboard::Bitboard::contains (154 samples, 1.60%)</title><rect x="51.1862%" y="149" width="1.5954%" height="15" fill="rgb(233,36,39)" fg:x="4941" fg:w="154"/><text x="51.4362%" y="159.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (144 samples, 1.49%)</title><rect x="51.2898%" y="133" width="1.4918%" height="15" fill="rgb(226,3,54)" fg:x="4951" fg:w="144"/><text x="51.5398%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (20 samples, 0.21%)</title><rect x="52.7815%" y="181" width="0.2072%" height="15" fill="rgb(245,192,40)" fg:x="5095" fg:w="20"/><text x="53.0315%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::single_square (446 samples, 4.62%)</title><rect x="52.9887%" y="165" width="4.6203%" height="15" fill="rgb(238,167,29)" fg:x="5115" fg:w="446"/><text x="53.2387%" y="175.50">shakm..</text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (446 samples, 4.62%)</title><rect x="52.9887%" y="149" width="4.6203%" height="15" fill="rgb(232,182,51)" fg:x="5115" fg:w="446"/><text x="53.2387%" y="159.50">shakm..</text></g><g><title>retroboard::retroboard::RetroBoard::king_of (479 samples, 4.96%)</title><rect x="52.7815%" y="197" width="4.9622%" height="15" fill="rgb(231,60,39)" fg:x="5095" fg:w="479"/><text x="53.0315%" y="207.50">retrob..</text></g><g><title>shakmaty::board::Board::king_of (459 samples, 4.75%)</title><rect x="52.9887%" y="181" width="4.7550%" height="15" fill="rgb(208,69,12)" fg:x="5115" fg:w="459"/><text x="53.2387%" y="191.50">shakma..</text></g><g><title>shakmaty::board::Board::by_color (13 samples, 0.13%)</title><rect x="57.6090%" y="165" width="0.1347%" height="15" fill="rgb(235,93,37)" fg:x="5561" fg:w="13"/><text x="57.8590%" y="175.50"></text></g><g><title>shakmaty::attacks::between (2 samples, 0.02%)</title><rect x="57.7437%" y="197" width="0.0207%" height="15" fill="rgb(213,116,39)" fg:x="5574" fg:w="2"/><text x="57.9937%" y="207.50"></text></g><g><title>shakmaty::attacks::ray (2 samples, 0.02%)</title><rect x="57.7437%" y="181" width="0.0207%" height="15" fill="rgb(222,207,29)" fg:x="5574" fg:w="2"/><text x="57.9937%" y="191.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (5 samples, 0.05%)</title><rect x="57.7644%" y="181" width="0.0518%" height="15" fill="rgb(206,96,30)" fg:x="5576" fg:w="5"/><text x="58.0144%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::is_safe (5,014 samples, 51.94%)</title><rect x="6.9823%" y="213" width="51.9424%" height="15" fill="rgb(218,138,4)" fg:x="674" fg:w="5014"/><text x="7.2323%" y="223.50">retroboard::retroboard::RetroBoard::is_safe</text></g><g><title>shakmaty::bitboard::Bitboard::contains (112 samples, 1.16%)</title><rect x="57.7644%" y="197" width="1.1603%" height="15" fill="rgb(250,191,14)" fg:x="5576" fg:w="112"/><text x="58.0144%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (107 samples, 1.11%)</title><rect x="57.8162%" y="181" width="1.1085%" height="15" fill="rgb(239,60,40)" fg:x="5581" fg:w="107"/><text x="58.0662%" y="191.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (5,600 samples, 58.01%)</title><rect x="1.1499%" y="261" width="58.0131%" height="15" fill="rgb(206,27,48)" fg:x="111" fg:w="5600"/><text x="1.3999%" y="271.50">arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain</text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one (5,323 samples, 55.14%)</title><rect x="4.0195%" y="245" width="55.1435%" height="15" fill="rgb(225,35,8)" fg:x="388" fg:w="5323"/><text x="4.2695%" y="255.50">arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one</text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}} (5,225 samples, 54.13%)</title><rect x="5.0347%" y="229" width="54.1283%" height="15" fill="rgb(250,213,24)" fg:x="486" fg:w="5225"/><text x="5.2847%" y="239.50">retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}}</text></g><g><title>shakmaty::bitboard::Bitboard::first (23 samples, 0.24%)</title><rect x="58.9247%" y="213" width="0.2383%" height="15" fill="rgb(247,123,22)" fg:x="5688" fg:w="23"/><text x="59.1747%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.01%)</title><rect x="59.1630%" y="229" width="0.0104%" height="15" fill="rgb(231,138,38)" fg:x="5711" fg:w="1"/><text x="59.4130%" y="239.50"></text></g><g><title>retroboard::retroboard::RetroBoard::king_of (4 samples, 0.04%)</title><rect x="59.1630%" y="245" width="0.0414%" height="15" fill="rgb(231,145,46)" fg:x="5711" fg:w="4"/><text x="59.4130%" y="255.50"></text></g><g><title>shakmaty::board::Board::king_of (3 samples, 0.03%)</title><rect x="59.1733%" y="229" width="0.0311%" height="15" fill="rgb(251,118,11)" fg:x="5712" fg:w="3"/><text x="59.4233%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::single_square (3 samples, 0.03%)</title><rect x="59.1733%" y="213" width="0.0311%" height="15" fill="rgb(217,147,25)" fg:x="5712" fg:w="3"/><text x="59.4233%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (3 samples, 0.03%)</title><rect x="59.1733%" y="197" width="0.0311%" height="15" fill="rgb(247,81,37)" fg:x="5712" fg:w="3"/><text x="59.4233%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::checkers (5 samples, 0.05%)</title><rect x="59.1630%" y="261" width="0.0518%" height="15" fill="rgb(209,12,38)" fg:x="5711" fg:w="5"/><text x="59.4130%" y="271.50"></text></g><g><title>shakmaty::board::Board::attacks_to (1 samples, 0.01%)</title><rect x="59.2044%" y="245" width="0.0104%" height="15" fill="rgb(227,1,9)" fg:x="5715" fg:w="1"/><text x="59.4544%" y="255.50"></text></g><g><title>shakmaty::attacks::knight_attacks (1 samples, 0.01%)</title><rect x="59.2044%" y="229" width="0.0104%" height="15" fill="rgb(248,47,43)" fg:x="5715" fg:w="1"/><text x="59.4544%" y="239.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (6 samples, 0.06%)</title><rect x="59.2665%" y="245" width="0.0622%" height="15" fill="rgb(221,10,30)" fg:x="5721" fg:w="6"/><text x="59.5165%" y="255.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_en_passant (13 samples, 0.13%)</title><rect x="59.2148%" y="261" width="0.1347%" height="15" fill="rgb(210,229,1)" fg:x="5716" fg:w="13"/><text x="59.4648%" y="271.50"></text></g><g><title>shakmaty::bitboard::Bitboard::relative_shift (2 samples, 0.02%)</title><rect x="59.3287%" y="245" width="0.0207%" height="15" fill="rgb(222,148,37)" fg:x="5727" fg:w="2"/><text x="59.5787%" y="255.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (1 samples, 0.01%)</title><rect x="59.3494%" y="261" width="0.0104%" height="15" fill="rgb(234,67,33)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;,retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="59.3494%" y="245" width="0.0104%" height="15" fill="rgb(247,98,35)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;&gt; (1 samples, 0.01%)</title><rect x="59.3494%" y="229" width="0.0104%" height="15" fill="rgb(247,138,52)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.3494%" y="213" width="0.0104%" height="15" fill="rgb(213,79,30)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;shakmaty::types::Role,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="59.3494%" y="197" width="0.0104%" height="15" fill="rgb(246,177,23)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="207.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.3494%" y="181" width="0.0104%" height="15" fill="rgb(230,62,27)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;shakmaty::types::Role&gt;&gt; (1 samples, 0.01%)</title><rect x="59.3494%" y="165" width="0.0104%" height="15" fill="rgb(216,154,8)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.3494%" y="149" width="0.0104%" height="15" fill="rgb(244,35,45)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="59.3494%" y="133" width="0.0104%" height="15" fill="rgb(251,115,12)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="59.3494%" y="117" width="0.0104%" height="15" fill="rgb(240,54,50)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="127.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="59.3494%" y="101" width="0.0104%" height="15" fill="rgb(233,84,52)" fg:x="5729" fg:w="1"/><text x="59.5994%" y="111.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (5 samples, 0.05%)</title><rect x="59.4737%" y="197" width="0.0518%" height="15" fill="rgb(207,117,47)" fg:x="5741" fg:w="5"/><text x="59.7237%" y="207.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.09%)</title><rect x="59.4634%" y="229" width="0.0932%" height="15" fill="rgb(249,43,39)" fg:x="5740" fg:w="9"/><text x="59.7134%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (9 samples, 0.09%)</title><rect x="59.4634%" y="213" width="0.0932%" height="15" fill="rgb(209,38,44)" fg:x="5740" fg:w="9"/><text x="59.7134%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::first (3 samples, 0.03%)</title><rect x="59.5255%" y="197" width="0.0311%" height="15" fill="rgb(236,212,23)" fg:x="5746" fg:w="3"/><text x="59.7755%" y="207.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (1 samples, 0.01%)</title><rect x="59.5566%" y="229" width="0.0104%" height="15" fill="rgb(242,79,21)" fg:x="5749" fg:w="1"/><text x="59.8066%" y="239.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (1 samples, 0.01%)</title><rect x="59.5566%" y="213" width="0.0104%" height="15" fill="rgb(211,96,35)" fg:x="5749" fg:w="1"/><text x="59.8066%" y="223.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (1 samples, 0.01%)</title><rect x="59.5566%" y="197" width="0.0104%" height="15" fill="rgb(253,215,40)" fg:x="5749" fg:w="1"/><text x="59.8066%" y="207.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.11%)</title><rect x="59.5773%" y="213" width="0.1140%" height="15" fill="rgb(211,81,21)" fg:x="5751" fg:w="11"/><text x="59.8273%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (11 samples, 0.11%)</title><rect x="59.5773%" y="197" width="0.1140%" height="15" fill="rgb(208,190,38)" fg:x="5751" fg:w="11"/><text x="59.8273%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (11 samples, 0.11%)</title><rect x="59.5773%" y="181" width="0.1140%" height="15" fill="rgb(235,213,38)" fg:x="5751" fg:w="11"/><text x="59.8273%" y="191.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.23%)</title><rect x="59.8363%" y="181" width="0.2279%" height="15" fill="rgb(237,122,38)" fg:x="5776" fg:w="22"/><text x="60.0863%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.33%)</title><rect x="59.8363%" y="197" width="0.3315%" height="15" fill="rgb(244,218,35)" fg:x="5776" fg:w="32"/><text x="60.0863%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.10%)</title><rect x="60.0642%" y="181" width="0.1036%" height="15" fill="rgb(240,68,47)" fg:x="5798" fg:w="10"/><text x="60.3142%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.10%)</title><rect x="60.0642%" y="165" width="0.1036%" height="15" fill="rgb(210,16,53)" fg:x="5798" fg:w="10"/><text x="60.3142%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}} (10 samples, 0.10%)</title><rect x="60.0642%" y="149" width="0.1036%" height="15" fill="rgb(235,124,12)" fg:x="5798" fg:w="10"/><text x="60.3142%" y="159.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="60.1678%" y="197" width="0.0207%" height="15" fill="rgb(224,169,11)" fg:x="5808" fg:w="2"/><text x="60.4178%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="60.2507%" y="165" width="0.0207%" height="15" fill="rgb(250,166,2)" fg:x="5816" fg:w="2"/><text x="60.5007%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="60.3336%" y="101" width="0.0207%" height="15" fill="rgb(242,216,29)" fg:x="5824" fg:w="2"/><text x="60.5836%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.01%)</title><rect x="60.3543%" y="101" width="0.0104%" height="15" fill="rgb(230,116,27)" fg:x="5826" fg:w="1"/><text x="60.6043%" y="111.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (3 samples, 0.03%)</title><rect x="60.4786%" y="85" width="0.0311%" height="15" fill="rgb(228,99,48)" fg:x="5838" fg:w="3"/><text x="60.7286%" y="95.50"></text></g><g><title>__libc_malloc (26 samples, 0.27%)</title><rect x="60.5097%" y="85" width="0.2693%" height="15" fill="rgb(253,11,6)" fg:x="5841" fg:w="26"/><text x="60.7597%" y="95.50"></text></g><g><title>__rdl_alloc (3 samples, 0.03%)</title><rect x="60.7790%" y="85" width="0.0311%" height="15" fill="rgb(247,143,39)" fg:x="5867" fg:w="3"/><text x="61.0290%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.03%)</title><rect x="60.7790%" y="69" width="0.0311%" height="15" fill="rgb(236,97,10)" fg:x="5867" fg:w="3"/><text x="61.0290%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 0.46%)</title><rect x="60.3647%" y="101" width="0.4558%" height="15" fill="rgb(233,208,19)" fg:x="5827" fg:w="44"/><text x="60.6147%" y="111.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="60.8101%" y="85" width="0.0104%" height="15" fill="rgb(216,164,2)" fg:x="5870" fg:w="1"/><text x="61.0601%" y="95.50"></text></g><g><title>core::cmp::max (4 samples, 0.04%)</title><rect x="60.8205%" y="101" width="0.0414%" height="15" fill="rgb(220,129,5)" fg:x="5871" fg:w="4"/><text x="61.0705%" y="111.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.04%)</title><rect x="60.8205%" y="85" width="0.0414%" height="15" fill="rgb(242,17,10)" fg:x="5871" fg:w="4"/><text x="61.0705%" y="95.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.04%)</title><rect x="60.8205%" y="69" width="0.0414%" height="15" fill="rgb(242,107,0)" fg:x="5871" fg:w="4"/><text x="61.0705%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (58 samples, 0.60%)</title><rect x="60.2714%" y="165" width="0.6008%" height="15" fill="rgb(251,28,31)" fg:x="5818" fg:w="58"/><text x="60.5214%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (58 samples, 0.60%)</title><rect x="60.2714%" y="149" width="0.6008%" height="15" fill="rgb(233,223,10)" fg:x="5818" fg:w="58"/><text x="60.5214%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (55 samples, 0.57%)</title><rect x="60.3025%" y="133" width="0.5698%" height="15" fill="rgb(215,21,27)" fg:x="5821" fg:w="55"/><text x="60.5525%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (53 samples, 0.55%)</title><rect x="60.3232%" y="117" width="0.5491%" height="15" fill="rgb(232,23,21)" fg:x="5823" fg:w="53"/><text x="60.5732%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="60.8619%" y="101" width="0.0104%" height="15" fill="rgb(244,5,23)" fg:x="5875" fg:w="1"/><text x="61.1119%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (65 samples, 0.67%)</title><rect x="60.2093%" y="181" width="0.6734%" height="15" fill="rgb(226,81,46)" fg:x="5812" fg:w="65"/><text x="60.4593%" y="191.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="60.8723%" y="165" width="0.0104%" height="15" fill="rgb(247,70,30)" fg:x="5876" fg:w="1"/><text x="61.1223%" y="175.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (73 samples, 0.76%)</title><rect x="60.1885%" y="197" width="0.7562%" height="15" fill="rgb(212,68,19)" fg:x="5810" fg:w="73"/><text x="60.4385%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (6 samples, 0.06%)</title><rect x="60.8826%" y="181" width="0.0622%" height="15" fill="rgb(240,187,13)" fg:x="5877" fg:w="6"/><text x="61.1326%" y="191.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (5 samples, 0.05%)</title><rect x="60.9448%" y="197" width="0.0518%" height="15" fill="rgb(223,113,26)" fg:x="5883" fg:w="5"/><text x="61.1948%" y="207.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (5 samples, 0.05%)</title><rect x="60.9448%" y="181" width="0.0518%" height="15" fill="rgb(206,192,2)" fg:x="5883" fg:w="5"/><text x="61.1948%" y="191.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (5 samples, 0.05%)</title><rect x="60.9448%" y="165" width="0.0518%" height="15" fill="rgb(241,108,4)" fg:x="5883" fg:w="5"/><text x="61.1948%" y="175.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (8 samples, 0.08%)</title><rect x="61.0380%" y="53" width="0.0829%" height="15" fill="rgb(247,173,49)" fg:x="5892" fg:w="8"/><text x="61.2880%" y="63.50"></text></g><g><title>[libc-2.31.so] (43 samples, 0.45%)</title><rect x="61.1209%" y="53" width="0.4455%" height="15" fill="rgb(224,114,35)" fg:x="5900" fg:w="43"/><text x="61.3709%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;,retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}}&gt;&gt; (80 samples, 0.83%)</title><rect x="60.9966%" y="197" width="0.8288%" height="15" fill="rgb(245,159,27)" fg:x="5888" fg:w="80"/><text x="61.2466%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;&gt; (80 samples, 0.83%)</title><rect x="60.9966%" y="181" width="0.8288%" height="15" fill="rgb(245,172,44)" fg:x="5888" fg:w="80"/><text x="61.2466%" y="191.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.83%)</title><rect x="60.9966%" y="165" width="0.8288%" height="15" fill="rgb(236,23,11)" fg:x="5888" fg:w="80"/><text x="61.2466%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;shakmaty::types::Role,alloc::alloc::Global&gt;&gt; (80 samples, 0.83%)</title><rect x="60.9966%" y="149" width="0.8288%" height="15" fill="rgb(205,117,38)" fg:x="5888" fg:w="80"/><text x="61.2466%" y="159.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.83%)</title><rect x="60.9966%" y="133" width="0.8288%" height="15" fill="rgb(237,72,25)" fg:x="5888" fg:w="80"/><text x="61.2466%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;shakmaty::types::Role&gt;&gt; (78 samples, 0.81%)</title><rect x="61.0173%" y="117" width="0.8080%" height="15" fill="rgb(244,70,9)" fg:x="5890" fg:w="78"/><text x="61.2673%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.81%)</title><rect x="61.0173%" y="101" width="0.8080%" height="15" fill="rgb(217,125,39)" fg:x="5890" fg:w="78"/><text x="61.2673%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (78 samples, 0.81%)</title><rect x="61.0173%" y="85" width="0.8080%" height="15" fill="rgb(235,36,10)" fg:x="5890" fg:w="78"/><text x="61.2673%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (78 samples, 0.81%)</title><rect x="61.0173%" y="69" width="0.8080%" height="15" fill="rgb(251,123,47)" fg:x="5890" fg:w="78"/><text x="61.2673%" y="79.50"></text></g><g><title>cfree (25 samples, 0.26%)</title><rect x="61.5664%" y="53" width="0.2590%" height="15" fill="rgb(221,13,13)" fg:x="5943" fg:w="25"/><text x="61.8164%" y="63.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (218 samples, 2.26%)</title><rect x="59.6913%" y="213" width="2.2584%" height="15" fill="rgb(238,131,9)" fg:x="5762" fg:w="218"/><text x="59.9413%" y="223.50">r..</text></g><g><title>shakmaty::bitboard::Bitboard::contains (12 samples, 0.12%)</title><rect x="61.8253%" y="197" width="0.1243%" height="15" fill="rgb(211,50,8)" fg:x="5968" fg:w="12"/><text x="62.0753%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (12 samples, 0.12%)</title><rect x="61.8253%" y="181" width="0.1243%" height="15" fill="rgb(245,182,24)" fg:x="5968" fg:w="12"/><text x="62.0753%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawn_uncaptures (232 samples, 2.40%)</title><rect x="59.5670%" y="229" width="2.4034%" height="15" fill="rgb(242,14,37)" fg:x="5750" fg:w="232"/><text x="59.8170%" y="239.50">re..</text></g><g><title>shakmaty::attacks::pawn_attacks (2 samples, 0.02%)</title><rect x="61.9497%" y="213" width="0.0207%" height="15" fill="rgb(246,228,12)" fg:x="5980" fg:w="2"/><text x="62.1997%" y="223.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawns (249 samples, 2.58%)</title><rect x="59.4634%" y="245" width="2.5795%" height="15" fill="rgb(213,55,15)" fg:x="5740" fg:w="249"/><text x="59.7134%" y="255.50">re..</text></g><g><title>shakmaty::bitboard::Bitboard::relative_rank (7 samples, 0.07%)</title><rect x="61.9704%" y="229" width="0.0725%" height="15" fill="rgb(209,9,3)" fg:x="5982" fg:w="7"/><text x="62.2204%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::rank (7 samples, 0.07%)</title><rect x="61.9704%" y="213" width="0.0725%" height="15" fill="rgb(230,59,30)" fg:x="5982" fg:w="7"/><text x="62.2204%" y="223.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (3 samples, 0.03%)</title><rect x="62.9131%" y="229" width="0.0311%" height="15" fill="rgb(209,121,21)" fg:x="6073" fg:w="3"/><text x="63.1631%" y="239.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.23%)</title><rect x="62.9442%" y="229" width="0.2279%" height="15" fill="rgb(220,109,13)" fg:x="6076" fg:w="22"/><text x="63.1942%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (22 samples, 0.23%)</title><rect x="62.9442%" y="213" width="0.2279%" height="15" fill="rgb(232,18,1)" fg:x="6076" fg:w="22"/><text x="63.1942%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::first (22 samples, 0.23%)</title><rect x="62.9442%" y="197" width="0.2279%" height="15" fill="rgb(215,41,42)" fg:x="6076" fg:w="22"/><text x="63.1942%" y="207.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (39 samples, 0.40%)</title><rect x="63.1721%" y="229" width="0.4040%" height="15" fill="rgb(224,123,36)" fg:x="6098" fg:w="39"/><text x="63.4221%" y="239.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (39 samples, 0.40%)</title><rect x="63.1721%" y="213" width="0.4040%" height="15" fill="rgb(240,125,3)" fg:x="6098" fg:w="39"/><text x="63.4221%" y="223.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (39 samples, 0.40%)</title><rect x="63.1721%" y="197" width="0.4040%" height="15" fill="rgb(205,98,50)" fg:x="6098" fg:w="39"/><text x="63.4221%" y="207.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (6 samples, 0.06%)</title><rect x="63.5139%" y="181" width="0.0622%" height="15" fill="rgb(205,185,37)" fg:x="6131" fg:w="6"/><text x="63.7639%" y="191.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (6 samples, 0.06%)</title><rect x="63.5139%" y="165" width="0.0622%" height="15" fill="rgb(238,207,15)" fg:x="6131" fg:w="6"/><text x="63.7639%" y="175.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (432 samples, 4.48%)</title><rect x="65.8345%" y="197" width="4.4753%" height="15" fill="rgb(213,199,42)" fg:x="6355" fg:w="432"/><text x="66.0845%" y="207.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (575 samples, 5.96%)</title><rect x="65.8345%" y="213" width="5.9567%" height="15" fill="rgb(235,201,11)" fg:x="6355" fg:w="575"/><text x="66.0845%" y="223.50">&lt;core::i..</text></g><g><title>core::option::Option&lt;T&gt;::map (143 samples, 1.48%)</title><rect x="70.3097%" y="197" width="1.4814%" height="15" fill="rgb(207,46,11)" fg:x="6787" fg:w="143"/><text x="70.5597%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (132 samples, 1.37%)</title><rect x="70.4237%" y="181" width="1.3675%" height="15" fill="rgb(241,35,35)" fg:x="6798" fg:w="132"/><text x="70.6737%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}} (132 samples, 1.37%)</title><rect x="70.4237%" y="165" width="1.3675%" height="15" fill="rgb(243,32,47)" fg:x="6798" fg:w="132"/><text x="70.6737%" y="175.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::clone::Clone&gt;::clone (29 samples, 0.30%)</title><rect x="71.7912%" y="213" width="0.3004%" height="15" fill="rgb(247,202,23)" fg:x="6930" fg:w="29"/><text x="72.0412%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.04%)</title><rect x="72.5888%" y="197" width="0.0414%" height="15" fill="rgb(219,102,11)" fg:x="7007" fg:w="4"/><text x="72.8388%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (21 samples, 0.22%)</title><rect x="73.0964%" y="181" width="0.2175%" height="15" fill="rgb(243,110,44)" fg:x="7056" fg:w="21"/><text x="73.3464%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.05%)</title><rect x="73.9770%" y="117" width="0.0518%" height="15" fill="rgb(222,74,54)" fg:x="7141" fg:w="5"/><text x="74.2270%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (33 samples, 0.34%)</title><rect x="74.0288%" y="117" width="0.3419%" height="15" fill="rgb(216,99,12)" fg:x="7146" fg:w="33"/><text x="74.2788%" y="127.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (65 samples, 0.67%)</title><rect x="75.6967%" y="101" width="0.6734%" height="15" fill="rgb(226,22,26)" fg:x="7307" fg:w="65"/><text x="75.9467%" y="111.50"></text></g><g><title>__libc_malloc (452 samples, 4.68%)</title><rect x="76.3700%" y="101" width="4.6825%" height="15" fill="rgb(217,163,10)" fg:x="7372" fg:w="452"/><text x="76.6200%" y="111.50">__lib..</text></g><g><title>__rdl_alloc (63 samples, 0.65%)</title><rect x="81.0525%" y="101" width="0.6526%" height="15" fill="rgb(213,25,53)" fg:x="7824" fg:w="63"/><text x="81.3025%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (63 samples, 0.65%)</title><rect x="81.0525%" y="85" width="0.6526%" height="15" fill="rgb(252,105,26)" fg:x="7824" fg:w="63"/><text x="81.3025%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (717 samples, 7.43%)</title><rect x="74.3707%" y="117" width="7.4277%" height="15" fill="rgb(220,39,43)" fg:x="7179" fg:w="717"/><text x="74.6207%" y="127.50">alloc::raw..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (9 samples, 0.09%)</title><rect x="81.7052%" y="101" width="0.0932%" height="15" fill="rgb(229,68,48)" fg:x="7887" fg:w="9"/><text x="81.9552%" y="111.50"></text></g><g><title>core::cmp::max (84 samples, 0.87%)</title><rect x="81.7984%" y="117" width="0.8702%" height="15" fill="rgb(252,8,32)" fg:x="7896" fg:w="84"/><text x="82.0484%" y="127.50"></text></g><g><title>core::cmp::Ord::max (84 samples, 0.87%)</title><rect x="81.7984%" y="101" width="0.8702%" height="15" fill="rgb(223,20,43)" fg:x="7896" fg:w="84"/><text x="82.0484%" y="111.50"></text></g><g><title>core::cmp::max_by (84 samples, 0.87%)</title><rect x="81.7984%" y="85" width="0.8702%" height="15" fill="rgb(229,81,49)" fg:x="7896" fg:w="84"/><text x="82.0484%" y="95.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.02%)</title><rect x="82.6686%" y="117" width="0.0207%" height="15" fill="rgb(236,28,36)" fg:x="7980" fg:w="2"/><text x="82.9186%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.02%)</title><rect x="82.6686%" y="101" width="0.0207%" height="15" fill="rgb(249,185,26)" fg:x="7980" fg:w="2"/><text x="82.9186%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (906 samples, 9.39%)</title><rect x="73.3140%" y="181" width="9.3857%" height="15" fill="rgb(249,174,33)" fg:x="7077" fg:w="906"/><text x="73.5640%" y="191.50">alloc::vec::V..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (906 samples, 9.39%)</title><rect x="73.3140%" y="165" width="9.3857%" height="15" fill="rgb(233,201,37)" fg:x="7077" fg:w="906"/><text x="73.5640%" y="175.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (862 samples, 8.93%)</title><rect x="73.7698%" y="149" width="8.9299%" height="15" fill="rgb(221,78,26)" fg:x="7121" fg:w="862"/><text x="74.0198%" y="159.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (843 samples, 8.73%)</title><rect x="73.9666%" y="133" width="8.7330%" height="15" fill="rgb(250,127,30)" fg:x="7140" fg:w="843"/><text x="74.2166%" y="143.50">alloc::raw_v..</text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="82.6893%" y="117" width="0.0104%" height="15" fill="rgb(230,49,44)" fg:x="7982" fg:w="1"/><text x="82.9393%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,006 samples, 10.42%)</title><rect x="72.6303%" y="197" width="10.4216%" height="15" fill="rgb(229,67,23)" fg:x="7011" fg:w="1006"/><text x="72.8803%" y="207.50">alloc::vec::Vec..</text></g><g><title>core::ptr::write (34 samples, 0.35%)</title><rect x="82.6997%" y="181" width="0.3522%" height="15" fill="rgb(249,83,47)" fg:x="7983" fg:w="34"/><text x="82.9497%" y="191.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,105 samples, 11.45%)</title><rect x="72.0916%" y="213" width="11.4472%" height="15" fill="rgb(215,43,3)" fg:x="6959" fg:w="1105"/><text x="72.3416%" y="223.50">&lt;retroboard::retr..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (47 samples, 0.49%)</title><rect x="83.0519%" y="197" width="0.4869%" height="15" fill="rgb(238,154,13)" fg:x="8017" fg:w="47"/><text x="83.3019%" y="207.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (73 samples, 0.76%)</title><rect x="83.5388%" y="213" width="0.7562%" height="15" fill="rgb(219,56,2)" fg:x="8064" fg:w="73"/><text x="83.7888%" y="223.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (73 samples, 0.76%)</title><rect x="83.5388%" y="197" width="0.7562%" height="15" fill="rgb(233,0,4)" fg:x="8064" fg:w="73"/><text x="83.7888%" y="207.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (73 samples, 0.76%)</title><rect x="83.5388%" y="181" width="0.7562%" height="15" fill="rgb(235,30,7)" fg:x="8064" fg:w="73"/><text x="83.7888%" y="191.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (73 samples, 0.76%)</title><rect x="84.7716%" y="69" width="0.7562%" height="15" fill="rgb(250,79,13)" fg:x="8183" fg:w="73"/><text x="85.0216%" y="79.50"></text></g><g><title>[libc-2.31.so] (362 samples, 3.75%)</title><rect x="85.5278%" y="69" width="3.7501%" height="15" fill="rgb(211,146,34)" fg:x="8256" fg:w="362"/><text x="85.7778%" y="79.50">[lib..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;,retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}}&gt;&gt; (917 samples, 9.50%)</title><rect x="84.2950%" y="213" width="9.4996%" height="15" fill="rgb(228,22,38)" fg:x="8137" fg:w="917"/><text x="84.5450%" y="223.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;&gt; (917 samples, 9.50%)</title><rect x="84.2950%" y="197" width="9.4996%" height="15" fill="rgb(235,168,5)" fg:x="8137" fg:w="917"/><text x="84.5450%" y="207.50">core::ptr::dro..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (917 samples, 9.50%)</title><rect x="84.2950%" y="181" width="9.4996%" height="15" fill="rgb(221,155,16)" fg:x="8137" fg:w="917"/><text x="84.5450%" y="191.50">&lt;alloc::vec::i..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;shakmaty::types::Role,alloc::alloc::Global&gt;&gt; (917 samples, 9.50%)</title><rect x="84.2950%" y="165" width="9.4996%" height="15" fill="rgb(215,215,53)" fg:x="8137" fg:w="917"/><text x="84.5450%" y="175.50">core::ptr::dro..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (917 samples, 9.50%)</title><rect x="84.2950%" y="149" width="9.4996%" height="15" fill="rgb(223,4,10)" fg:x="8137" fg:w="917"/><text x="84.5450%" y="159.50">&lt;&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;shakmaty::types::Role&gt;&gt; (872 samples, 9.03%)</title><rect x="84.7612%" y="133" width="9.0335%" height="15" fill="rgb(234,103,6)" fg:x="8182" fg:w="872"/><text x="85.0112%" y="143.50">core::ptr::dr..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (872 samples, 9.03%)</title><rect x="84.7612%" y="117" width="9.0335%" height="15" fill="rgb(227,97,0)" fg:x="8182" fg:w="872"/><text x="85.0112%" y="127.50">&lt;alloc::raw_v..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (872 samples, 9.03%)</title><rect x="84.7612%" y="101" width="9.0335%" height="15" fill="rgb(234,150,53)" fg:x="8182" fg:w="872"/><text x="85.0112%" y="111.50">&lt;alloc::alloc..</text></g><g><title>alloc::alloc::dealloc (872 samples, 9.03%)</title><rect x="84.7612%" y="85" width="9.0335%" height="15" fill="rgb(228,201,54)" fg:x="8182" fg:w="872"/><text x="85.0112%" y="95.50">alloc::alloc:..</text></g><g><title>cfree (436 samples, 4.52%)</title><rect x="89.2779%" y="69" width="4.5167%" height="15" fill="rgb(222,22,37)" fg:x="8618" fg:w="436"/><text x="89.5279%" y="79.50">cfree</text></g><g><title>retroboard::retropocket::RetroPockets::color (5 samples, 0.05%)</title><rect x="93.7947%" y="213" width="0.0518%" height="15" fill="rgb(237,53,32)" fg:x="9054" fg:w="5"/><text x="94.0447%" y="223.50"></text></g><g><title>retroboard::unmove::UnMove::uncapture (1 samples, 0.01%)</title><rect x="93.8465%" y="213" width="0.0104%" height="15" fill="rgb(233,25,53)" fg:x="9059" fg:w="1"/><text x="94.0965%" y="223.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (4 samples, 0.04%)</title><rect x="93.8568%" y="197" width="0.0414%" height="15" fill="rgb(210,40,34)" fg:x="9060" fg:w="4"/><text x="94.1068%" y="207.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (3,105 samples, 32.17%)</title><rect x="63.5761%" y="229" width="32.1662%" height="15" fill="rgb(241,220,44)" fg:x="6137" fg:w="3105"/><text x="63.8261%" y="239.50">retroboard::retroboard::RetroBoard::gen_uncaptures</text></g><g><title>shakmaty::bitboard::Bitboard::contains (182 samples, 1.89%)</title><rect x="93.8568%" y="213" width="1.8854%" height="15" fill="rgb(235,28,35)" fg:x="9060" fg:w="182"/><text x="94.1068%" y="223.50">s..</text></g><g><title>shakmaty::bitboard::Bitboard::from_square (178 samples, 1.84%)</title><rect x="93.8983%" y="197" width="1.8440%" height="15" fill="rgb(210,56,17)" fg:x="9064" fg:w="178"/><text x="94.1483%" y="207.50">s..</text></g><g><title>shakmaty::attacks::king_attacks (24 samples, 0.25%)</title><rect x="96.0841%" y="213" width="0.2486%" height="15" fill="rgb(224,130,29)" fg:x="9275" fg:w="24"/><text x="96.3341%" y="223.50"></text></g><g><title>shakmaty::attacks::bishop_attacks (5 samples, 0.05%)</title><rect x="96.3327%" y="197" width="0.0518%" height="15" fill="rgb(235,212,8)" fg:x="9299" fg:w="5"/><text x="96.5827%" y="207.50"></text></g><g><title>shakmaty::attacks::queen_attacks (11 samples, 0.11%)</title><rect x="96.3327%" y="213" width="0.1140%" height="15" fill="rgb(223,33,50)" fg:x="9299" fg:w="11"/><text x="96.5827%" y="223.50"></text></g><g><title>shakmaty::attacks::rook_attacks (6 samples, 0.06%)</title><rect x="96.3845%" y="197" width="0.0622%" height="15" fill="rgb(219,149,13)" fg:x="9304" fg:w="6"/><text x="96.6345%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="96.4260%" y="181" width="0.0207%" height="15" fill="rgb(250,156,29)" fg:x="9308" fg:w="2"/><text x="96.6760%" y="191.50"></text></g><g><title>shakmaty::attacks::attacks (70 samples, 0.73%)</title><rect x="95.7423%" y="229" width="0.7252%" height="15" fill="rgb(216,193,19)" fg:x="9242" fg:w="70"/><text x="95.9923%" y="239.50"></text></g><g><title>shakmaty::attacks::rook_attacks (2 samples, 0.02%)</title><rect x="96.4467%" y="213" width="0.0207%" height="15" fill="rgb(216,135,14)" fg:x="9310" fg:w="2"/><text x="96.6967%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.12%)</title><rect x="96.4674%" y="213" width="0.1243%" height="15" fill="rgb(241,47,5)" fg:x="9312" fg:w="12"/><text x="96.7174%" y="223.50"></text></g><g><title>shakmaty::board::Board::piece_at::{{closure}} (12 samples, 0.12%)</title><rect x="96.4674%" y="197" width="0.1243%" height="15" fill="rgb(233,42,35)" fg:x="9312" fg:w="12"/><text x="96.7174%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (12 samples, 0.12%)</title><rect x="96.4674%" y="181" width="0.1243%" height="15" fill="rgb(231,13,6)" fg:x="9312" fg:w="12"/><text x="96.7174%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::is_empty (12 samples, 0.12%)</title><rect x="96.4674%" y="165" width="0.1243%" height="15" fill="rgb(207,181,40)" fg:x="9312" fg:w="12"/><text x="96.7174%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="197" width="0.0104%" height="15" fill="rgb(254,173,49)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="181" width="0.0104%" height="15" fill="rgb(221,1,38)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="165" width="0.0104%" height="15" fill="rgb(206,124,46)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="149" width="0.0104%" height="15" fill="rgb(249,21,11)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="133" width="0.0104%" height="15" fill="rgb(222,201,40)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="117" width="0.0104%" height="15" fill="rgb(235,61,29)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="101" width="0.0104%" height="15" fill="rgb(219,207,3)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="85" width="0.0104%" height="15" fill="rgb(222,56,46)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="69" width="0.0104%" height="15" fill="rgb(239,76,54)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.1097%" y="53" width="0.0104%" height="15" fill="rgb(231,124,27)" fg:x="9374" fg:w="1"/><text x="97.3597%" y="63.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (4 samples, 0.04%)</title><rect x="97.1201%" y="181" width="0.0414%" height="15" fill="rgb(249,195,6)" fg:x="9375" fg:w="4"/><text x="97.3701%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pieces (3,398 samples, 35.20%)</title><rect x="62.0429%" y="245" width="35.2015%" height="15" fill="rgb(237,174,47)" fg:x="5989" fg:w="3398"/><text x="62.2929%" y="255.50">retroboard::retroboard::RetroBoard::gen_pieces</text></g><g><title>shakmaty::board::Board::piece_at (75 samples, 0.78%)</title><rect x="96.4674%" y="229" width="0.7770%" height="15" fill="rgb(206,201,31)" fg:x="9312" fg:w="75"/><text x="96.7174%" y="239.50"></text></g><g><title>shakmaty::board::Board::role_at (63 samples, 0.65%)</title><rect x="96.5917%" y="213" width="0.6526%" height="15" fill="rgb(231,57,52)" fg:x="9324" fg:w="63"/><text x="96.8417%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (12 samples, 0.12%)</title><rect x="97.1201%" y="197" width="0.1243%" height="15" fill="rgb(248,177,22)" fg:x="9375" fg:w="12"/><text x="97.3701%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (8 samples, 0.08%)</title><rect x="97.1615%" y="181" width="0.0829%" height="15" fill="rgb(215,211,37)" fg:x="9379" fg:w="8"/><text x="97.4115%" y="191.50"></text></g><g><title>shakmaty::square::&lt;impl core::convert::From&lt;shakmaty::square::Square&gt; for usize&gt;::from (5 samples, 0.05%)</title><rect x="97.1926%" y="165" width="0.0518%" height="15" fill="rgb(241,128,51)" fg:x="9382" fg:w="5"/><text x="97.4426%" y="175.50"></text></g><g><title>&lt;shakmaty::bitboard::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.2651%" y="197" width="0.0104%" height="15" fill="rgb(227,165,31)" fg:x="9389" fg:w="1"/><text x="97.5151%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::pop_front (1 samples, 0.01%)</title><rect x="97.2651%" y="181" width="0.0104%" height="15" fill="rgb(228,167,24)" fg:x="9389" fg:w="1"/><text x="97.5151%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="97.2651%" y="165" width="0.0104%" height="15" fill="rgb(228,143,12)" fg:x="9389" fg:w="1"/><text x="97.5151%" y="175.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.10%)</title><rect x="97.3169%" y="165" width="0.1036%" height="15" fill="rgb(249,149,8)" fg:x="9394" fg:w="10"/><text x="97.5669%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.13%)</title><rect x="97.3169%" y="181" width="0.1347%" height="15" fill="rgb(243,35,44)" fg:x="9394" fg:w="13"/><text x="97.5669%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.03%)</title><rect x="97.4205%" y="165" width="0.0311%" height="15" fill="rgb(246,89,9)" fg:x="9404" fg:w="3"/><text x="97.6705%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.03%)</title><rect x="97.4205%" y="149" width="0.0311%" height="15" fill="rgb(233,213,13)" fg:x="9404" fg:w="3"/><text x="97.6705%" y="159.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}} (3 samples, 0.03%)</title><rect x="97.4205%" y="133" width="0.0311%" height="15" fill="rgb(233,141,41)" fg:x="9404" fg:w="3"/><text x="97.6705%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="97.4619%" y="149" width="0.0104%" height="15" fill="rgb(239,167,4)" fg:x="9408" fg:w="1"/><text x="97.7119%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="97.4723%" y="85" width="0.0104%" height="15" fill="rgb(209,217,16)" fg:x="9409" fg:w="1"/><text x="97.7223%" y="95.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 0.01%)</title><rect x="97.5137%" y="69" width="0.0104%" height="15" fill="rgb(219,88,35)" fg:x="9413" fg:w="1"/><text x="97.7637%" y="79.50"></text></g><g><title>__libc_malloc (4 samples, 0.04%)</title><rect x="97.5241%" y="69" width="0.0414%" height="15" fill="rgb(220,193,23)" fg:x="9414" fg:w="4"/><text x="97.7741%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.10%)</title><rect x="97.4826%" y="85" width="0.1036%" height="15" fill="rgb(230,90,52)" fg:x="9410" fg:w="10"/><text x="97.7326%" y="95.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="97.5655%" y="69" width="0.0207%" height="15" fill="rgb(252,106,19)" fg:x="9418" fg:w="2"/><text x="97.8155%" y="79.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="97.5655%" y="53" width="0.0207%" height="15" fill="rgb(206,74,20)" fg:x="9418" fg:w="2"/><text x="97.8155%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.12%)</title><rect x="97.4723%" y="149" width="0.1243%" height="15" fill="rgb(230,138,44)" fg:x="9409" fg:w="12"/><text x="97.7223%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.12%)</title><rect x="97.4723%" y="133" width="0.1243%" height="15" fill="rgb(235,182,43)" fg:x="9409" fg:w="12"/><text x="97.7223%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.12%)</title><rect x="97.4723%" y="117" width="0.1243%" height="15" fill="rgb(242,16,51)" fg:x="9409" fg:w="12"/><text x="97.7223%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.12%)</title><rect x="97.4723%" y="101" width="0.1243%" height="15" fill="rgb(248,9,4)" fg:x="9409" fg:w="12"/><text x="97.7223%" y="111.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="97.5862%" y="85" width="0.0104%" height="15" fill="rgb(210,31,22)" fg:x="9420" fg:w="1"/><text x="97.8362%" y="95.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="97.5862%" y="69" width="0.0104%" height="15" fill="rgb(239,54,39)" fg:x="9420" fg:w="1"/><text x="97.8362%" y="79.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="97.5862%" y="53" width="0.0104%" height="15" fill="rgb(230,99,41)" fg:x="9420" fg:w="1"/><text x="97.8362%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.16%)</title><rect x="97.4516%" y="165" width="0.1554%" height="15" fill="rgb(253,106,12)" fg:x="9407" fg:w="15"/><text x="97.7016%" y="175.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="97.5966%" y="149" width="0.0104%" height="15" fill="rgb(213,46,41)" fg:x="9421" fg:w="1"/><text x="97.8466%" y="159.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.17%)</title><rect x="97.4516%" y="181" width="0.1658%" height="15" fill="rgb(215,133,35)" fg:x="9407" fg:w="16"/><text x="97.7016%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="97.6070%" y="165" width="0.0104%" height="15" fill="rgb(213,28,5)" fg:x="9422" fg:w="1"/><text x="97.8570%" y="175.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (4 samples, 0.04%)</title><rect x="97.6173%" y="181" width="0.0414%" height="15" fill="rgb(215,77,49)" fg:x="9423" fg:w="4"/><text x="97.8673%" y="191.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (4 samples, 0.04%)</title><rect x="97.6173%" y="165" width="0.0414%" height="15" fill="rgb(248,100,22)" fg:x="9423" fg:w="4"/><text x="97.8673%" y="175.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (4 samples, 0.04%)</title><rect x="97.6173%" y="149" width="0.0414%" height="15" fill="rgb(208,67,9)" fg:x="9423" fg:w="4"/><text x="97.8673%" y="159.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2 samples, 0.02%)</title><rect x="97.6691%" y="37" width="0.0207%" height="15" fill="rgb(219,133,21)" fg:x="9428" fg:w="2"/><text x="97.9191%" y="47.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.08%)</title><rect x="97.6898%" y="37" width="0.0829%" height="15" fill="rgb(246,46,29)" fg:x="9430" fg:w="8"/><text x="97.9398%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;,retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}}&gt;&gt; (16 samples, 0.17%)</title><rect x="97.6588%" y="181" width="0.1658%" height="15" fill="rgb(246,185,52)" fg:x="9427" fg:w="16"/><text x="97.9088%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;&gt; (16 samples, 0.17%)</title><rect x="97.6588%" y="165" width="0.1658%" height="15" fill="rgb(252,136,11)" fg:x="9427" fg:w="16"/><text x="97.9088%" y="175.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="97.6588%" y="149" width="0.1658%" height="15" fill="rgb(219,138,53)" fg:x="9427" fg:w="16"/><text x="97.9088%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;shakmaty::types::Role,alloc::alloc::Global&gt;&gt; (16 samples, 0.17%)</title><rect x="97.6588%" y="133" width="0.1658%" height="15" fill="rgb(211,51,23)" fg:x="9427" fg:w="16"/><text x="97.9088%" y="143.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="97.6588%" y="117" width="0.1658%" height="15" fill="rgb(247,221,28)" fg:x="9427" fg:w="16"/><text x="97.9088%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;shakmaty::types::Role&gt;&gt; (15 samples, 0.16%)</title><rect x="97.6691%" y="101" width="0.1554%" height="15" fill="rgb(251,222,45)" fg:x="9428" fg:w="15"/><text x="97.9191%" y="111.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.16%)</title><rect x="97.6691%" y="85" width="0.1554%" height="15" fill="rgb(217,162,53)" fg:x="9428" fg:w="15"/><text x="97.9191%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.16%)</title><rect x="97.6691%" y="69" width="0.1554%" height="15" fill="rgb(229,93,14)" fg:x="9428" fg:w="15"/><text x="97.9191%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.16%)</title><rect x="97.6691%" y="53" width="0.1554%" height="15" fill="rgb(209,67,49)" fg:x="9428" fg:w="15"/><text x="97.9191%" y="63.50"></text></g><g><title>cfree (5 samples, 0.05%)</title><rect x="97.7727%" y="37" width="0.0518%" height="15" fill="rgb(213,87,29)" fg:x="9438" fg:w="5"/><text x="98.0227%" y="47.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_unpromotion_on (57 samples, 0.59%)</title><rect x="97.2651%" y="229" width="0.5905%" height="15" fill="rgb(205,151,52)" fg:x="9389" fg:w="57"/><text x="97.5151%" y="239.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawn_uncaptures (57 samples, 0.59%)</title><rect x="97.2651%" y="213" width="0.5905%" height="15" fill="rgb(253,215,39)" fg:x="9389" fg:w="57"/><text x="97.5151%" y="223.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (56 samples, 0.58%)</title><rect x="97.2755%" y="197" width="0.5801%" height="15" fill="rgb(221,220,41)" fg:x="9390" fg:w="56"/><text x="97.5255%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (3 samples, 0.03%)</title><rect x="97.8245%" y="181" width="0.0311%" height="15" fill="rgb(218,133,21)" fg:x="9443" fg:w="3"/><text x="98.0745%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (3 samples, 0.03%)</title><rect x="97.8245%" y="165" width="0.0311%" height="15" fill="rgb(221,193,43)" fg:x="9443" fg:w="3"/><text x="98.0745%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::pseudo_legal_unmoves (3,718 samples, 38.52%)</title><rect x="59.3598%" y="261" width="38.5165%" height="15" fill="rgb(240,128,52)" fg:x="5730" fg:w="3718"/><text x="59.6098%" y="271.50">retroboard::retroboard::RetroBoard::pseudo_legal_unmoves</text></g><g><title>retroboard::retroboard::RetroBoard::gen_unpromotion (61 samples, 0.63%)</title><rect x="97.2444%" y="245" width="0.6319%" height="15" fill="rgb(253,114,12)" fg:x="9387" fg:w="61"/><text x="97.4944%" y="255.50"></text></g><g><title>shakmaty::bitboard::Bitboard::relative_rank (2 samples, 0.02%)</title><rect x="97.8556%" y="229" width="0.0207%" height="15" fill="rgb(215,223,47)" fg:x="9446" fg:w="2"/><text x="98.1056%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::rank (2 samples, 0.02%)</title><rect x="97.8556%" y="213" width="0.0207%" height="15" fill="rgb(248,225,23)" fg:x="9446" fg:w="2"/><text x="98.1056%" y="223.50"></text></g><g><title>retroboard::retroboard::RetroBoard::slider_blockers (6 samples, 0.06%)</title><rect x="97.8763%" y="261" width="0.0622%" height="15" fill="rgb(250,108,0)" fg:x="9448" fg:w="6"/><text x="98.1263%" y="271.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAnd&lt;T&gt;&gt;::bitand (1 samples, 0.01%)</title><rect x="97.9281%" y="245" width="0.0104%" height="15" fill="rgb(228,208,7)" fg:x="9453" fg:w="1"/><text x="98.1781%" y="255.50"></text></g><g><title>shakmaty::bitboard::Bitboard::count (2 samples, 0.02%)</title><rect x="97.9385%" y="261" width="0.0207%" height="15" fill="rgb(244,45,10)" fg:x="9454" fg:w="2"/><text x="98.1885%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (2 samples, 0.02%)</title><rect x="97.9385%" y="245" width="0.0207%" height="15" fill="rgb(207,125,25)" fg:x="9454" fg:w="2"/><text x="98.1885%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,457 samples, 97.97%)</title><rect x="0.0000%" y="581" width="97.9695%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="591.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (9,457 samples, 97.97%)</title><rect x="0.0000%" y="565" width="97.9695%" height="15" fill="rgb(249,80,12)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="575.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9,457 samples, 97.97%)</title><rect x="0.0000%" y="549" width="97.9695%" height="15" fill="rgb(221,65,9)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="559.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>retroboard::perft::{{closure}} (9,457 samples, 97.97%)</title><rect x="0.0000%" y="533" width="97.9695%" height="15" fill="rgb(235,49,36)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="543.50">retroboard::perft::{{closure}}</text></g><g><title>retroboard::perft (9,457 samples, 97.97%)</title><rect x="0.0000%" y="517" width="97.9695%" height="15" fill="rgb(225,32,20)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="527.50">retroboard::perft</text></g><g><title>core::iter::traits::iterator::Iterator::sum (9,457 samples, 97.97%)</title><rect x="0.0000%" y="501" width="97.9695%" height="15" fill="rgb(215,141,46)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="511.50">core::iter::traits::iterator::Iterator::sum</text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (9,457 samples, 97.97%)</title><rect x="0.0000%" y="485" width="97.9695%" height="15" fill="rgb(250,160,47)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="495.50">&lt;u64 as core::iter::traits::accum::Sum&gt;::sum</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,457 samples, 97.97%)</title><rect x="0.0000%" y="469" width="97.9695%" height="15" fill="rgb(216,222,40)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="479.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (9,457 samples, 97.97%)</title><rect x="0.0000%" y="453" width="97.9695%" height="15" fill="rgb(234,217,39)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="463.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9,457 samples, 97.97%)</title><rect x="0.0000%" y="437" width="97.9695%" height="15" fill="rgb(207,178,40)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="447.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>retroboard::perft::{{closure}} (9,457 samples, 97.97%)</title><rect x="0.0000%" y="421" width="97.9695%" height="15" fill="rgb(221,136,13)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="431.50">retroboard::perft::{{closure}}</text></g><g><title>retroboard::perft (9,457 samples, 97.97%)</title><rect x="0.0000%" y="405" width="97.9695%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="415.50">retroboard::perft</text></g><g><title>core::iter::traits::iterator::Iterator::sum (9,457 samples, 97.97%)</title><rect x="0.0000%" y="389" width="97.9695%" height="15" fill="rgb(249,222,13)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="399.50">core::iter::traits::iterator::Iterator::sum</text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (9,457 samples, 97.97%)</title><rect x="0.0000%" y="373" width="97.9695%" height="15" fill="rgb(244,185,38)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="383.50">&lt;u64 as core::iter::traits::accum::Sum&gt;::sum</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,457 samples, 97.97%)</title><rect x="0.0000%" y="357" width="97.9695%" height="15" fill="rgb(236,202,9)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="367.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (9,457 samples, 97.97%)</title><rect x="0.0000%" y="341" width="97.9695%" height="15" fill="rgb(250,229,37)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="351.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9,457 samples, 97.97%)</title><rect x="0.0000%" y="325" width="97.9695%" height="15" fill="rgb(206,174,23)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="335.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>retroboard::perft::{{closure}} (9,457 samples, 97.97%)</title><rect x="0.0000%" y="309" width="97.9695%" height="15" fill="rgb(211,33,43)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="319.50">retroboard::perft::{{closure}}</text></g><g><title>retroboard::perft (9,457 samples, 97.97%)</title><rect x="0.0000%" y="293" width="97.9695%" height="15" fill="rgb(245,58,50)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="303.50">retroboard::perft</text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves (9,457 samples, 97.97%)</title><rect x="0.0000%" y="277" width="97.9695%" height="15" fill="rgb(244,68,36)" fg:x="0" fg:w="9457"/><text x="0.2500%" y="287.50">retroboard::retroboard::RetroBoard::legal_unmoves</text></g><g><title>shakmaty::board::Board::piece_at (1 samples, 0.01%)</title><rect x="97.9592%" y="261" width="0.0104%" height="15" fill="rgb(232,229,15)" fg:x="9456" fg:w="1"/><text x="98.2092%" y="271.50"></text></g><g><title>shakmaty::board::Board::role_at (1 samples, 0.01%)</title><rect x="97.9592%" y="245" width="0.0104%" height="15" fill="rgb(254,30,23)" fg:x="9456" fg:w="1"/><text x="98.2092%" y="255.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (1 samples, 0.01%)</title><rect x="97.9592%" y="229" width="0.0104%" height="15" fill="rgb(235,160,14)" fg:x="9456" fg:w="1"/><text x="98.2092%" y="239.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (1 samples, 0.01%)</title><rect x="97.9592%" y="213" width="0.0104%" height="15" fill="rgb(212,155,44)" fg:x="9456" fg:w="1"/><text x="98.2092%" y="223.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (1 samples, 0.01%)</title><rect x="97.9695%" y="149" width="0.0104%" height="15" fill="rgb(226,2,50)" fg:x="9457" fg:w="1"/><text x="98.2195%" y="159.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2 samples, 0.02%)</title><rect x="97.9695%" y="581" width="0.0207%" height="15" fill="rgb(234,177,6)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="591.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2 samples, 0.02%)</title><rect x="97.9695%" y="565" width="0.0207%" height="15" fill="rgb(217,24,9)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="575.50"></text></g><g><title>__libc_start_main (2 samples, 0.02%)</title><rect x="97.9695%" y="549" width="0.0207%" height="15" fill="rgb(220,13,46)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="559.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2 samples, 0.02%)</title><rect x="97.9695%" y="533" width="0.0207%" height="15" fill="rgb(239,221,27)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="543.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.02%)</title><rect x="97.9695%" y="517" width="0.0207%" height="15" fill="rgb(222,198,25)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="527.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.02%)</title><rect x="97.9695%" y="501" width="0.0207%" height="15" fill="rgb(211,99,13)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="511.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="97.9695%" y="485" width="0.0207%" height="15" fill="rgb(232,111,31)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="495.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="97.9695%" y="469" width="0.0207%" height="15" fill="rgb(245,82,37)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="479.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (2 samples, 0.02%)</title><rect x="97.9695%" y="453" width="0.0207%" height="15" fill="rgb(227,149,46)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="463.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.02%)</title><rect x="97.9695%" y="437" width="0.0207%" height="15" fill="rgb(218,36,50)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="447.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="97.9695%" y="421" width="0.0207%" height="15" fill="rgb(226,80,48)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="431.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="97.9695%" y="405" width="0.0207%" height="15" fill="rgb(238,224,15)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.02%)</title><rect x="97.9695%" y="389" width="0.0207%" height="15" fill="rgb(241,136,10)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="399.50"></text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 0.02%)</title><rect x="97.9695%" y="373" width="0.0207%" height="15" fill="rgb(208,32,45)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.02%)</title><rect x="97.9695%" y="357" width="0.0207%" height="15" fill="rgb(207,135,9)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="97.9695%" y="341" width="0.0207%" height="15" fill="rgb(206,86,44)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="351.50"></text></g><g><title>retroboard::main (2 samples, 0.02%)</title><rect x="97.9695%" y="325" width="0.0207%" height="15" fill="rgb(245,177,15)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="335.50"></text></g><g><title>retroboard::retroboard (2 samples, 0.02%)</title><rect x="97.9695%" y="309" width="0.0207%" height="15" fill="rgb(206,64,50)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="319.50"></text></g><g><title>retroboard::perft (2 samples, 0.02%)</title><rect x="97.9695%" y="293" width="0.0207%" height="15" fill="rgb(234,36,40)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="97.9695%" y="277" width="0.0207%" height="15" fill="rgb(213,64,8)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="287.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="97.9695%" y="261" width="0.0207%" height="15" fill="rgb(210,75,36)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="97.9695%" y="245" width="0.0207%" height="15" fill="rgb(229,88,21)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="97.9695%" y="229" width="0.0207%" height="15" fill="rgb(252,204,47)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="97.9695%" y="213" width="0.0207%" height="15" fill="rgb(208,77,27)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="223.50"></text></g><g><title>retroboard::perft::{{closure}} (2 samples, 0.02%)</title><rect x="97.9695%" y="197" width="0.0207%" height="15" fill="rgb(221,76,26)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="207.50"></text></g><g><title>retroboard::perft (2 samples, 0.02%)</title><rect x="97.9695%" y="181" width="0.0207%" height="15" fill="rgb(225,139,18)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves (2 samples, 0.02%)</title><rect x="97.9695%" y="165" width="0.0207%" height="15" fill="rgb(230,137,11)" fg:x="9457" fg:w="2"/><text x="98.2195%" y="175.50"></text></g><g><title>retroboard::retroboard::RetroBoard::pseudo_legal_unmoves (1 samples, 0.01%)</title><rect x="97.9799%" y="149" width="0.0104%" height="15" fill="rgb(212,28,1)" fg:x="9458" fg:w="1"/><text x="98.2299%" y="159.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pieces (1 samples, 0.01%)</title><rect x="97.9799%" y="133" width="0.0104%" height="15" fill="rgb(248,164,17)" fg:x="9458" fg:w="1"/><text x="98.2299%" y="143.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (1 samples, 0.01%)</title><rect x="97.9799%" y="117" width="0.0104%" height="15" fill="rgb(222,171,42)" fg:x="9458" fg:w="1"/><text x="98.2299%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.9799%" y="101" width="0.0104%" height="15" fill="rgb(243,84,45)" fg:x="9458" fg:w="1"/><text x="98.2299%" y="111.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.9799%" y="85" width="0.0104%" height="15" fill="rgb(252,49,23)" fg:x="9458" fg:w="1"/><text x="98.2299%" y="95.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.05%)</title><rect x="97.9903%" y="549" width="0.0518%" height="15" fill="rgb(215,19,7)" fg:x="9459" fg:w="5"/><text x="98.2403%" y="559.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (1 samples, 0.01%)</title><rect x="98.0421%" y="549" width="0.0104%" height="15" fill="rgb(238,81,41)" fg:x="9464" fg:w="1"/><text x="98.2921%" y="559.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="98.0421%" y="533" width="0.0104%" height="15" fill="rgb(210,199,37)" fg:x="9464" fg:w="1"/><text x="98.2921%" y="543.50"></text></g><g><title>[[heap]] (11 samples, 0.11%)</title><rect x="97.9903%" y="581" width="0.1140%" height="15" fill="rgb(244,192,49)" fg:x="9459" fg:w="11"/><text x="98.2403%" y="591.50"></text></g><g><title>[[heap]] (11 samples, 0.11%)</title><rect x="97.9903%" y="565" width="0.1140%" height="15" fill="rgb(226,211,11)" fg:x="9459" fg:w="11"/><text x="98.2403%" y="575.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves (5 samples, 0.05%)</title><rect x="98.0524%" y="549" width="0.0518%" height="15" fill="rgb(236,162,54)" fg:x="9465" fg:w="5"/><text x="98.3024%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (42 samples, 0.44%)</title><rect x="98.1042%" y="549" width="0.4351%" height="15" fill="rgb(220,229,9)" fg:x="9470" fg:w="42"/><text x="98.3542%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 0.44%)</title><rect x="98.1042%" y="533" width="0.4351%" height="15" fill="rgb(250,87,22)" fg:x="9470" fg:w="42"/><text x="98.3542%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (42 samples, 0.44%)</title><rect x="98.1042%" y="517" width="0.4351%" height="15" fill="rgb(239,43,17)" fg:x="9470" fg:w="42"/><text x="98.3542%" y="527.50"></text></g><g><title>[[stack]] (53 samples, 0.55%)</title><rect x="98.1042%" y="581" width="0.5491%" height="15" fill="rgb(231,177,25)" fg:x="9470" fg:w="53"/><text x="98.3542%" y="591.50"></text></g><g><title>[[stack]] (53 samples, 0.55%)</title><rect x="98.1042%" y="565" width="0.5491%" height="15" fill="rgb(219,179,1)" fg:x="9470" fg:w="53"/><text x="98.3542%" y="575.50"></text></g><g><title>retroboard::retroboard::RetroBoard::is_safe (11 samples, 0.11%)</title><rect x="98.5393%" y="549" width="0.1140%" height="15" fill="rgb(238,219,53)" fg:x="9512" fg:w="11"/><text x="98.7893%" y="559.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.11%)</title><rect x="98.6533%" y="549" width="0.1140%" height="15" fill="rgb(232,167,36)" fg:x="9523" fg:w="11"/><text x="98.9033%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.11%)</title><rect x="98.6533%" y="533" width="0.1140%" height="15" fill="rgb(244,19,51)" fg:x="9523" fg:w="11"/><text x="98.9033%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.11%)</title><rect x="98.6533%" y="517" width="0.1140%" height="15" fill="rgb(224,6,22)" fg:x="9523" fg:w="11"/><text x="98.9033%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.11%)</title><rect x="98.6533%" y="501" width="0.1140%" height="15" fill="rgb(224,145,5)" fg:x="9523" fg:w="11"/><text x="98.9033%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.11%)</title><rect x="98.6533%" y="485" width="0.1140%" height="15" fill="rgb(234,130,49)" fg:x="9523" fg:w="11"/><text x="98.9033%" y="495.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (3 samples, 0.03%)</title><rect x="98.7672%" y="549" width="0.0311%" height="15" fill="rgb(254,6,2)" fg:x="9534" fg:w="3"/><text x="99.0172%" y="559.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one (3 samples, 0.03%)</title><rect x="98.7672%" y="533" width="0.0311%" height="15" fill="rgb(208,96,46)" fg:x="9534" fg:w="3"/><text x="99.0172%" y="543.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}} (3 samples, 0.03%)</title><rect x="98.7672%" y="517" width="0.0311%" height="15" fill="rgb(239,3,39)" fg:x="9534" fg:w="3"/><text x="99.0172%" y="527.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (3 samples, 0.03%)</title><rect x="98.7672%" y="501" width="0.0311%" height="15" fill="rgb(233,210,1)" fg:x="9534" fg:w="3"/><text x="99.0172%" y="511.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves (1 samples, 0.01%)</title><rect x="98.7983%" y="549" width="0.0104%" height="15" fill="rgb(244,137,37)" fg:x="9537" fg:w="1"/><text x="99.0483%" y="559.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (1 samples, 0.01%)</title><rect x="98.7983%" y="533" width="0.0104%" height="15" fill="rgb(240,136,2)" fg:x="9537" fg:w="1"/><text x="99.0483%" y="543.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="98.6533%" y="581" width="0.2175%" height="15" fill="rgb(239,18,37)" fg:x="9523" fg:w="21"/><text x="98.9033%" y="591.50"></text></g><g><title>[unknown] (21 samples, 0.22%)</title><rect x="98.6533%" y="565" width="0.2175%" height="15" fill="rgb(218,185,22)" fg:x="9523" fg:w="21"/><text x="98.9033%" y="575.50"></text></g><g><title>retroboard::retroboard::RetroBoard::pseudo_legal_unmoves (6 samples, 0.06%)</title><rect x="98.8087%" y="549" width="0.0622%" height="15" fill="rgb(225,218,4)" fg:x="9538" fg:w="6"/><text x="99.0587%" y="559.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pieces (6 samples, 0.06%)</title><rect x="98.8087%" y="533" width="0.0622%" height="15" fill="rgb(230,182,32)" fg:x="9538" fg:w="6"/><text x="99.0587%" y="543.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (6 samples, 0.06%)</title><rect x="98.8087%" y="517" width="0.0622%" height="15" fill="rgb(242,56,43)" fg:x="9538" fg:w="6"/><text x="99.0587%" y="527.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (1 samples, 0.01%)</title><rect x="98.8708%" y="581" width="0.0104%" height="15" fill="rgb(233,99,24)" fg:x="9544" fg:w="1"/><text x="99.1208%" y="591.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one (1 samples, 0.01%)</title><rect x="98.8708%" y="565" width="0.0104%" height="15" fill="rgb(234,209,42)" fg:x="9544" fg:w="1"/><text x="99.1208%" y="575.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}} (1 samples, 0.01%)</title><rect x="98.8708%" y="549" width="0.0104%" height="15" fill="rgb(227,7,12)" fg:x="9544" fg:w="1"/><text x="99.1208%" y="559.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (1 samples, 0.01%)</title><rect x="98.8708%" y="533" width="0.0104%" height="15" fill="rgb(245,203,43)" fg:x="9544" fg:w="1"/><text x="99.1208%" y="543.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.02%)</title><rect x="98.8812%" y="229" width="0.0207%" height="15" fill="rgb(238,205,33)" fg:x="9545" fg:w="2"/><text x="99.1312%" y="239.50"></text></g><g><title>retroboard::retropocket::RetroPocket::decr (19 samples, 0.20%)</title><rect x="98.9744%" y="197" width="0.1968%" height="15" fill="rgb(231,56,7)" fg:x="9554" fg:w="19"/><text x="99.2244%" y="207.50"></text></g><g><title>retroboard::unmove::UnMove::uncapture (5 samples, 0.05%)</title><rect x="99.1712%" y="197" width="0.0518%" height="15" fill="rgb(244,186,29)" fg:x="9573" fg:w="5"/><text x="99.4212%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::toggle (2 samples, 0.02%)</title><rect x="99.2230%" y="181" width="0.0207%" height="15" fill="rgb(234,111,31)" fg:x="9578" fg:w="2"/><text x="99.4730%" y="191.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitXorAssign&lt;T&gt;&gt;::bitxor_assign (2 samples, 0.02%)</title><rect x="99.2230%" y="165" width="0.0207%" height="15" fill="rgb(241,149,10)" fg:x="9578" fg:w="2"/><text x="99.4730%" y="175.50"></text></g><g><title>shakmaty::board::Board::remove_piece_at (16 samples, 0.17%)</title><rect x="99.2230%" y="197" width="0.1658%" height="15" fill="rgb(249,206,44)" fg:x="9578" fg:w="16"/><text x="99.4730%" y="207.50"></text></g><g><title>shakmaty::board::Board::piece_at (14 samples, 0.15%)</title><rect x="99.2438%" y="181" width="0.1450%" height="15" fill="rgb(251,153,30)" fg:x="9580" fg:w="14"/><text x="99.4938%" y="191.50"></text></g><g><title>shakmaty::board::Board::role_at (12 samples, 0.12%)</title><rect x="99.2645%" y="165" width="0.1243%" height="15" fill="rgb(239,152,38)" fg:x="9582" fg:w="12"/><text x="99.5145%" y="175.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (5 samples, 0.05%)</title><rect x="99.3370%" y="149" width="0.0518%" height="15" fill="rgb(249,139,47)" fg:x="9589" fg:w="5"/><text x="99.5870%" y="159.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (5 samples, 0.05%)</title><rect x="99.3370%" y="133" width="0.0518%" height="15" fill="rgb(244,64,35)" fg:x="9589" fg:w="5"/><text x="99.5870%" y="143.50"></text></g><g><title>shakmaty::bitboard::Bitboard::toggle (9 samples, 0.09%)</title><rect x="99.3888%" y="181" width="0.0932%" height="15" fill="rgb(216,46,15)" fg:x="9594" fg:w="9"/><text x="99.6388%" y="191.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitXorAssign&lt;T&gt;&gt;::bitxor_assign (9 samples, 0.09%)</title><rect x="99.3888%" y="165" width="0.0932%" height="15" fill="rgb(250,74,19)" fg:x="9594" fg:w="9"/><text x="99.6388%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (64 samples, 0.66%)</title><rect x="98.8812%" y="309" width="0.6630%" height="15" fill="rgb(249,42,33)" fg:x="9545" fg:w="64"/><text x="99.1312%" y="319.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (64 samples, 0.66%)</title><rect x="98.8812%" y="293" width="0.6630%" height="15" fill="rgb(242,149,17)" fg:x="9545" fg:w="64"/><text x="99.1312%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (64 samples, 0.66%)</title><rect x="98.8812%" y="277" width="0.6630%" height="15" fill="rgb(244,29,21)" fg:x="9545" fg:w="64"/><text x="99.1312%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (64 samples, 0.66%)</title><rect x="98.8812%" y="261" width="0.6630%" height="15" fill="rgb(220,130,37)" fg:x="9545" fg:w="64"/><text x="99.1312%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (64 samples, 0.66%)</title><rect x="98.8812%" y="245" width="0.6630%" height="15" fill="rgb(211,67,2)" fg:x="9545" fg:w="64"/><text x="99.1312%" y="255.50"></text></g><g><title>retroboard::perft::{{closure}} (62 samples, 0.64%)</title><rect x="98.9019%" y="229" width="0.6423%" height="15" fill="rgb(235,68,52)" fg:x="9547" fg:w="62"/><text x="99.1519%" y="239.50"></text></g><g><title>retroboard::retroboard::RetroBoard::push (62 samples, 0.64%)</title><rect x="98.9019%" y="213" width="0.6423%" height="15" fill="rgb(246,142,3)" fg:x="9547" fg:w="62"/><text x="99.1519%" y="223.50"></text></g><g><title>shakmaty::board::Board::set_piece_at (15 samples, 0.16%)</title><rect x="99.3888%" y="197" width="0.1554%" height="15" fill="rgb(241,25,7)" fg:x="9594" fg:w="15"/><text x="99.6388%" y="207.50"></text></g><g><title>shakmaty::board::Board::discard_piece_at (6 samples, 0.06%)</title><rect x="99.4820%" y="181" width="0.0622%" height="15" fill="rgb(242,119,39)" fg:x="9603" fg:w="6"/><text x="99.7320%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::discard (6 samples, 0.06%)</title><rect x="99.4820%" y="165" width="0.0622%" height="15" fill="rgb(241,98,45)" fg:x="9603" fg:w="6"/><text x="99.7320%" y="175.50"></text></g><g><title>&lt;shakmaty::bitboard::Bitboard as core::ops::bit::BitAndAssign&lt;T&gt;&gt;::bitand_assign (6 samples, 0.06%)</title><rect x="99.4820%" y="149" width="0.0622%" height="15" fill="rgb(254,28,30)" fg:x="9603" fg:w="6"/><text x="99.7320%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.01%)</title><rect x="99.6685%" y="229" width="0.0104%" height="15" fill="rgb(241,142,54)" fg:x="9621" fg:w="1"/><text x="99.9185%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="99.6685%" y="213" width="0.0104%" height="15" fill="rgb(222,85,15)" fg:x="9621" fg:w="1"/><text x="99.9185%" y="223.50"></text></g><g><title>retroboard::retroboard::RetroBoard::king_of (3 samples, 0.03%)</title><rect x="99.6892%" y="213" width="0.0311%" height="15" fill="rgb(210,85,47)" fg:x="9623" fg:w="3"/><text x="99.9392%" y="223.50"></text></g><g><title>shakmaty::board::Board::king_of (3 samples, 0.03%)</title><rect x="99.6892%" y="197" width="0.0311%" height="15" fill="rgb(224,206,25)" fg:x="9623" fg:w="3"/><text x="99.9392%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::single_square (3 samples, 0.03%)</title><rect x="99.6892%" y="181" width="0.0311%" height="15" fill="rgb(243,201,19)" fg:x="9623" fg:w="3"/><text x="99.9392%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (3 samples, 0.03%)</title><rect x="99.6892%" y="165" width="0.0311%" height="15" fill="rgb(236,59,4)" fg:x="9623" fg:w="3"/><text x="99.9392%" y="175.50"></text></g><g><title>shakmaty::attacks::attacks (4 samples, 0.04%)</title><rect x="99.7203%" y="213" width="0.0414%" height="15" fill="rgb(254,179,45)" fg:x="9626" fg:w="4"/><text x="99.9703%" y="223.50"></text></g><g><title>shakmaty::attacks::queen_attacks (1 samples, 0.01%)</title><rect x="99.7514%" y="197" width="0.0104%" height="15" fill="rgb(226,14,10)" fg:x="9629" fg:w="1"/><text x="100.0014%" y="207.50"></text></g><g><title>shakmaty::attacks::rook_attacks (1 samples, 0.01%)</title><rect x="99.7514%" y="181" width="0.0104%" height="15" fill="rgb(244,27,41)" fg:x="9629" fg:w="1"/><text x="100.0014%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::does_unmove_give_check (11 samples, 0.11%)</title><rect x="99.6789%" y="229" width="0.1140%" height="15" fill="rgb(235,35,32)" fg:x="9622" fg:w="11"/><text x="99.9289%" y="239.50"></text></g><g><title>shakmaty::board::Board::piece_at (3 samples, 0.03%)</title><rect x="99.7617%" y="213" width="0.0311%" height="15" fill="rgb(218,68,31)" fg:x="9630" fg:w="3"/><text x="100.0117%" y="223.50"></text></g><g><title>shakmaty::board::Board::role_at (3 samples, 0.03%)</title><rect x="99.7617%" y="197" width="0.0311%" height="15" fill="rgb(207,120,37)" fg:x="9630" fg:w="3"/><text x="100.0117%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::contains (1 samples, 0.01%)</title><rect x="99.7825%" y="181" width="0.0104%" height="15" fill="rgb(227,98,0)" fg:x="9632" fg:w="1"/><text x="100.0325%" y="191.50"></text></g><g><title>shakmaty::bitboard::Bitboard::from_square (1 samples, 0.01%)</title><rect x="99.7825%" y="165" width="0.0104%" height="15" fill="rgb(207,7,3)" fg:x="9632" fg:w="1"/><text x="100.0325%" y="175.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (26 samples, 0.27%)</title><rect x="99.5442%" y="293" width="0.2693%" height="15" fill="rgb(206,98,19)" fg:x="9609" fg:w="26"/><text x="99.7942%" y="303.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one (25 samples, 0.26%)</title><rect x="99.5545%" y="277" width="0.2590%" height="15" fill="rgb(217,5,26)" fg:x="9610" fg:w="25"/><text x="99.8045%" y="287.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves::{{closure}} (24 samples, 0.25%)</title><rect x="99.5649%" y="261" width="0.2486%" height="15" fill="rgb(235,190,38)" fg:x="9611" fg:w="24"/><text x="99.8149%" y="271.50"></text></g><g><title>retroboard::retroboard::RetroBoard::is_safe (23 samples, 0.24%)</title><rect x="99.5753%" y="245" width="0.2383%" height="15" fill="rgb(247,86,24)" fg:x="9612" fg:w="23"/><text x="99.8253%" y="255.50"></text></g><g><title>retroboard::retroboard::RetroBoard::king_of (2 samples, 0.02%)</title><rect x="99.7928%" y="229" width="0.0207%" height="15" fill="rgb(205,101,16)" fg:x="9633" fg:w="2"/><text x="100.0428%" y="239.50"></text></g><g><title>shakmaty::board::Board::king_of (2 samples, 0.02%)</title><rect x="99.7928%" y="213" width="0.0207%" height="15" fill="rgb(246,168,33)" fg:x="9633" fg:w="2"/><text x="100.0428%" y="223.50"></text></g><g><title>shakmaty::bitboard::Bitboard::single_square (2 samples, 0.02%)</title><rect x="99.7928%" y="197" width="0.0207%" height="15" fill="rgb(231,114,1)" fg:x="9633" fg:w="2"/><text x="100.0428%" y="207.50"></text></g><g><title>shakmaty::bitboard::Bitboard::more_than_one (2 samples, 0.02%)</title><rect x="99.7928%" y="181" width="0.0207%" height="15" fill="rgb(207,184,53)" fg:x="9633" fg:w="2"/><text x="100.0428%" y="191.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawns (1 samples, 0.01%)</title><rect x="99.8135%" y="277" width="0.0104%" height="15" fill="rgb(224,95,51)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="287.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pawn_uncaptures (1 samples, 0.01%)</title><rect x="99.8135%" y="261" width="0.0104%" height="15" fill="rgb(212,188,45)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="271.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (1 samples, 0.01%)</title><rect x="99.8135%" y="245" width="0.0104%" height="15" fill="rgb(223,154,38)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;,retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="99.8135%" y="229" width="0.0104%" height="15" fill="rgb(251,22,52)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;&gt; (1 samples, 0.01%)</title><rect x="99.8135%" y="213" width="0.0104%" height="15" fill="rgb(229,209,22)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.8135%" y="197" width="0.0104%" height="15" fill="rgb(234,138,34)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;shakmaty::types::Role,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="99.8135%" y="181" width="0.0104%" height="15" fill="rgb(212,95,11)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="191.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.8135%" y="165" width="0.0104%" height="15" fill="rgb(240,179,47)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;shakmaty::types::Role&gt;&gt; (1 samples, 0.01%)</title><rect x="99.8135%" y="149" width="0.0104%" height="15" fill="rgb(240,163,11)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.8135%" y="133" width="0.0104%" height="15" fill="rgb(236,37,12)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="99.8135%" y="117" width="0.0104%" height="15" fill="rgb(232,164,16)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="99.8135%" y="101" width="0.0104%" height="15" fill="rgb(244,205,15)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="111.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="99.8135%" y="85" width="0.0104%" height="15" fill="rgb(223,117,47)" fg:x="9635" fg:w="1"/><text x="100.0635%" y="95.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (2 samples, 0.02%)</title><rect x="99.8239%" y="261" width="0.0207%" height="15" fill="rgb(244,107,35)" fg:x="9636" fg:w="2"/><text x="100.0739%" y="271.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (2 samples, 0.02%)</title><rect x="99.8239%" y="245" width="0.0207%" height="15" fill="rgb(205,140,8)" fg:x="9636" fg:w="2"/><text x="100.0739%" y="255.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (2 samples, 0.02%)</title><rect x="99.8239%" y="229" width="0.0207%" height="15" fill="rgb(228,84,46)" fg:x="9636" fg:w="2"/><text x="100.0739%" y="239.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (1 samples, 0.01%)</title><rect x="99.8342%" y="213" width="0.0104%" height="15" fill="rgb(254,188,9)" fg:x="9637" fg:w="1"/><text x="100.0842%" y="223.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (1 samples, 0.01%)</title><rect x="99.8342%" y="197" width="0.0104%" height="15" fill="rgb(206,112,54)" fg:x="9637" fg:w="1"/><text x="100.0842%" y="207.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.8446%" y="229" width="0.0104%" height="15" fill="rgb(216,84,49)" fg:x="9638" fg:w="1"/><text x="100.0946%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="99.8446%" y="245" width="0.0207%" height="15" fill="rgb(214,194,35)" fg:x="9638" fg:w="2"/><text x="100.0946%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="99.8550%" y="229" width="0.0104%" height="15" fill="rgb(249,28,3)" fg:x="9639" fg:w="1"/><text x="100.1050%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="99.8550%" y="213" width="0.0104%" height="15" fill="rgb(222,56,52)" fg:x="9639" fg:w="1"/><text x="100.1050%" y="223.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}} (1 samples, 0.01%)</title><rect x="99.8550%" y="197" width="0.0104%" height="15" fill="rgb(245,217,50)" fg:x="9639" fg:w="1"/><text x="100.1050%" y="207.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="99.8653%" y="245" width="0.0104%" height="15" fill="rgb(213,201,24)" fg:x="9640" fg:w="1"/><text x="100.1153%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.02%)</title><rect x="99.8757%" y="149" width="0.0207%" height="15" fill="rgb(248,116,28)" fg:x="9641" fg:w="2"/><text x="100.1257%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="99.8964%" y="149" width="0.0311%" height="15" fill="rgb(219,72,43)" fg:x="9643" fg:w="3"/><text x="100.1464%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="99.9068%" y="133" width="0.0207%" height="15" fill="rgb(209,138,14)" fg:x="9644" fg:w="2"/><text x="100.1568%" y="143.50"></text></g><g><title>&lt;retroboard::retropocket::RetroPocket as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.06%)</title><rect x="99.8757%" y="245" width="0.0622%" height="15" fill="rgb(222,18,33)" fg:x="9641" fg:w="6"/><text x="100.1257%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.06%)</title><rect x="99.8757%" y="229" width="0.0622%" height="15" fill="rgb(213,199,7)" fg:x="9641" fg:w="6"/><text x="100.1257%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="99.8757%" y="213" width="0.0622%" height="15" fill="rgb(250,110,10)" fg:x="9641" fg:w="6"/><text x="100.1257%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="99.8757%" y="197" width="0.0622%" height="15" fill="rgb(248,123,6)" fg:x="9641" fg:w="6"/><text x="100.1257%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.06%)</title><rect x="99.8757%" y="181" width="0.0622%" height="15" fill="rgb(206,91,31)" fg:x="9641" fg:w="6"/><text x="100.1257%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.06%)</title><rect x="99.8757%" y="165" width="0.0622%" height="15" fill="rgb(211,154,13)" fg:x="9641" fg:w="6"/><text x="100.1257%" y="175.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="99.9275%" y="149" width="0.0104%" height="15" fill="rgb(225,148,7)" fg:x="9646" fg:w="1"/><text x="100.1775%" y="159.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="99.9275%" y="133" width="0.0104%" height="15" fill="rgb(220,160,43)" fg:x="9646" fg:w="1"/><text x="100.1775%" y="143.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="99.9275%" y="117" width="0.0104%" height="15" fill="rgb(213,52,39)" fg:x="9646" fg:w="1"/><text x="100.1775%" y="127.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (1 samples, 0.01%)</title><rect x="99.9378%" y="245" width="0.0104%" height="15" fill="rgb(243,137,7)" fg:x="9647" fg:w="1"/><text x="100.1878%" y="255.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (1 samples, 0.01%)</title><rect x="99.9378%" y="229" width="0.0104%" height="15" fill="rgb(230,79,13)" fg:x="9647" fg:w="1"/><text x="100.1878%" y="239.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (1 samples, 0.01%)</title><rect x="99.9378%" y="213" width="0.0104%" height="15" fill="rgb(247,105,23)" fg:x="9647" fg:w="1"/><text x="100.1878%" y="223.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="99.9482%" y="101" width="0.0104%" height="15" fill="rgb(223,179,41)" fg:x="9648" fg:w="1"/><text x="100.1982%" y="111.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_uncaptures (13 samples, 0.13%)</title><rect x="99.8446%" y="261" width="0.1347%" height="15" fill="rgb(218,9,34)" fg:x="9638" fg:w="13"/><text x="100.0946%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;,retroboard::retroboard::RetroBoard::gen_uncaptures::{{closure}}&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9482%" y="245" width="0.0311%" height="15" fill="rgb(222,106,8)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;shakmaty::types::Role&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9482%" y="229" width="0.0311%" height="15" fill="rgb(211,220,0)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="99.9482%" y="213" width="0.0311%" height="15" fill="rgb(229,52,16)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;shakmaty::types::Role,alloc::alloc::Global&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9482%" y="197" width="0.0311%" height="15" fill="rgb(212,155,18)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="207.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="99.9482%" y="181" width="0.0311%" height="15" fill="rgb(242,21,14)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;shakmaty::types::Role&gt;&gt; (3 samples, 0.03%)</title><rect x="99.9482%" y="165" width="0.0311%" height="15" fill="rgb(222,19,48)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="99.9482%" y="149" width="0.0311%" height="15" fill="rgb(232,45,27)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="99.9482%" y="133" width="0.0311%" height="15" fill="rgb(249,103,42)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="99.9482%" y="117" width="0.0311%" height="15" fill="rgb(246,81,33)" fg:x="9648" fg:w="3"/><text x="100.1982%" y="127.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="99.9586%" y="101" width="0.0207%" height="15" fill="rgb(252,33,42)" fg:x="9649" fg:w="2"/><text x="100.2086%" y="111.50"></text></g><g><title>shakmaty::attacks::attacks (1 samples, 0.01%)</title><rect x="99.9793%" y="261" width="0.0104%" height="15" fill="rgb(209,212,41)" fg:x="9651" fg:w="1"/><text x="100.2293%" y="271.50"></text></g><g><title>all (9,653 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="9653"/><text x="0.2500%" y="623.50"></text></g><g><title>retroboard (9,653 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(223,64,47)" fg:x="0" fg:w="9653"/><text x="0.2500%" y="607.50">retroboard</text></g><g><title>retroboard::main (108 samples, 1.12%)</title><rect x="98.8812%" y="581" width="1.1188%" height="15" fill="rgb(211,161,38)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="591.50"></text></g><g><title>retroboard::retroboard (108 samples, 1.12%)</title><rect x="98.8812%" y="565" width="1.1188%" height="15" fill="rgb(219,138,40)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="575.50"></text></g><g><title>retroboard::perft (108 samples, 1.12%)</title><rect x="98.8812%" y="549" width="1.1188%" height="15" fill="rgb(241,228,46)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (108 samples, 1.12%)</title><rect x="98.8812%" y="533" width="1.1188%" height="15" fill="rgb(223,209,38)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="543.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (108 samples, 1.12%)</title><rect x="98.8812%" y="517" width="1.1188%" height="15" fill="rgb(236,164,45)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (108 samples, 1.12%)</title><rect x="98.8812%" y="501" width="1.1188%" height="15" fill="rgb(231,15,5)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (108 samples, 1.12%)</title><rect x="98.8812%" y="485" width="1.1188%" height="15" fill="rgb(252,35,15)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (108 samples, 1.12%)</title><rect x="98.8812%" y="469" width="1.1188%" height="15" fill="rgb(248,181,18)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="479.50"></text></g><g><title>retroboard::perft::{{closure}} (108 samples, 1.12%)</title><rect x="98.8812%" y="453" width="1.1188%" height="15" fill="rgb(233,39,42)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="463.50"></text></g><g><title>retroboard::perft (108 samples, 1.12%)</title><rect x="98.8812%" y="437" width="1.1188%" height="15" fill="rgb(238,110,33)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (108 samples, 1.12%)</title><rect x="98.8812%" y="421" width="1.1188%" height="15" fill="rgb(233,195,10)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="431.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (108 samples, 1.12%)</title><rect x="98.8812%" y="405" width="1.1188%" height="15" fill="rgb(254,105,3)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (108 samples, 1.12%)</title><rect x="98.8812%" y="389" width="1.1188%" height="15" fill="rgb(221,225,9)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (108 samples, 1.12%)</title><rect x="98.8812%" y="373" width="1.1188%" height="15" fill="rgb(224,227,45)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (108 samples, 1.12%)</title><rect x="98.8812%" y="357" width="1.1188%" height="15" fill="rgb(229,198,43)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="367.50"></text></g><g><title>retroboard::perft::{{closure}} (108 samples, 1.12%)</title><rect x="98.8812%" y="341" width="1.1188%" height="15" fill="rgb(206,209,35)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="351.50"></text></g><g><title>retroboard::perft (108 samples, 1.12%)</title><rect x="98.8812%" y="325" width="1.1188%" height="15" fill="rgb(245,195,53)" fg:x="9545" fg:w="108"/><text x="99.1312%" y="335.50"></text></g><g><title>retroboard::retroboard::RetroBoard::legal_unmoves (44 samples, 0.46%)</title><rect x="99.5442%" y="309" width="0.4558%" height="15" fill="rgb(240,92,26)" fg:x="9609" fg:w="44"/><text x="99.7942%" y="319.50"></text></g><g><title>retroboard::retroboard::RetroBoard::pseudo_legal_unmoves (18 samples, 0.19%)</title><rect x="99.8135%" y="293" width="0.1865%" height="15" fill="rgb(207,40,23)" fg:x="9635" fg:w="18"/><text x="100.0635%" y="303.50"></text></g><g><title>retroboard::retroboard::RetroBoard::gen_pieces (17 samples, 0.18%)</title><rect x="99.8239%" y="277" width="0.1761%" height="15" fill="rgb(223,111,35)" fg:x="9636" fg:w="17"/><text x="100.0739%" y="287.50"></text></g><g><title>shakmaty::board::Board::piece_at (1 samples, 0.01%)</title><rect x="99.9896%" y="261" width="0.0104%" height="15" fill="rgb(229,147,28)" fg:x="9652" fg:w="1"/><text x="100.2396%" y="271.50"></text></g><g><title>shakmaty::board::Board::role_at (1 samples, 0.01%)</title><rect x="99.9896%" y="245" width="0.0104%" height="15" fill="rgb(211,29,28)" fg:x="9652" fg:w="1"/><text x="100.2396%" y="255.50"></text></g></svg></svg>